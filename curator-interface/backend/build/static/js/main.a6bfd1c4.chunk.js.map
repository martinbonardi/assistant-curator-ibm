{"version":3,"sources":["services/api.js","helpers/apiCalls.js","hooks/globalState.js","helpers/languagesConfig.js","components/AccountSelectionModal/index.js","components/HelpModal/index.js","components/CognosHelpModal/index.js","components/Rating/index.js","helpers/helpers.js","components/SaveModal/index.js","components/LoadModal/index.js","components/WarningModal/index.js","components/StandardDashboardModal/index.js","components/SuccessModal/index.js","components/Header/index.js","components/InfoTable/index.js","components/Tabs/index.js","components/ConfigModal/index.js","pages/Dashboard/index.js","pages/Search/index.js","helpers/cognos.js","components/CognosConfigModal/index.js","pages/Cognos/index.js","pages/Login/index.js","routes.js","index.js"],"names":["api","axios","create","baseURL","window","location","protocol","host","getAccounts","a","Promise","resolve","reject","get","then","res","data","catch","err","switchAccount","accountId","getResources","getResourceKeys","resourceId","GlobalStateContext","createContext","GlobalStateProvider","children","history","useHistory","useState","language","setLanguage","resources","accounts","setAccounts","entity","name","account","setAccount","cognos","body","guid","cloudant","db2","setResources","loading","setLoading","helpOpen","setHelpOpen","cognosHelpOpen","setCognosHelpOpen","configOpen","setConfigOpen","cognosConfigOpen","setCognosConfigOpen","accountModalOpen","setAccountModalOpen","accountLoading","setAccountLoading","accountSelected","setAccountSelected","saveModalOpen","setSaveModalOpen","loadModalOpen","setLoadModalOpen","warningOpen","setWarningOpen","standardDashboardModal","setStandardDashboardModal","successOpen","setSuccessOpen","unsavedChanges","setUnsavedChanges","rowData","setRowData","conversations","setConversations","cognosClient","setCognosClient","cognosSession","setCognosSession","cognosDashboard","setCognosDashboard","localStorage","getItem","connectionString","setConnectionString","cognosUsername","setCognosUsername","cognosPassword","setCognosPassword","defaultDashboardName","setDefaultDashboardName","cloudantApi","setCloudantApi","cloudantUrl","setCloudantUrl","cloudantDbName","setCloudantDbName","xsd","setXsd","jdbcUrl","setJdbcUrl","driverClassName","setDriverClassName","schema","setSchema","db2Username","setDb2UserName","db2Password","setDb2Passwor","logsTable","setLogsTable","conversationTable","setConversationTable","callsTable","setCallsTable","contextTable","setContextTable","conversationPathTable","setConversationPathTable","overviewTable","setOverviewTable","classDistributionTable","setClassDistributionTable","precisionAtKTable","setPrecisionAtKTable","classAccuracyTable","setClassAccuracyTable","pairWiseClassErrorsTable","setPairWiseClassErrorsTable","accuracyVsCoverageTable","setAccuracyVsCoverageTable","useEffect","setItem","response","status","push","Provider","value","useGlobalState","context","useContext","Error","pt","headerSwitcher","save","upToDate","load","infoTable","sendButton","group","accountSelectionModal","heading","label","primaryText","secondaryText","inputLabel1","modal","selectAnOption","alert","inputLabel2","cognosModal","tab1","tab2","tab3","tab4","inputLabel3","inputLabel4","inputLabel5","inputLabel6","inputLabel7","inputLabel8","inputLabel9","inputLabel10","inputLabel11","inputLabel12","inputLabel13","inputLabel14","inputLabel15","inputLabel16","inputLabel17","saveModal","loadModal","modalHelp","text","cognosModalHelp","modalWarning","caption","modalSuccess","es","en","AccountSelectionModal","modalOpen","Modal","open","modalHeading","textLanguage","modalLabel","primaryButtonText","secondaryButtonText","onRequestClose","onRequestSubmit","preventCloseOnClickOutside","Select","id","invalidText","labelText","onChange","e","JSON","parse","target","metadata","map","resource","SelectItem","stringify","HelpModal","passiveModal","CognosHelpModal","customIcons","icon","IconContainer","props","other","BasicRating","conversationID","logID","defaultValue","Rating","IconContainerComponent","highlightSelectedOnly","sx","color","newValue","log","LOGID","SCORE","createRows","updateScore","rowsAux","Object","entries","key","rowAux","CONVERSATIONID","CLIENTMESSAGE","ASSISTANTMESSAGE","FIRSTINTENT","getLogs","tableName","callback","param","post","connStr","table","console","keys","length","conversation","updateRender","filter","obj","fromEntries","getCognosSession","username","password","sendToCloudant","dashboardName","apikey","url","dbName","docId","document","getFromCloudant","ID","initializeSources","user","_id","_rev","generateConnectionString","credential","credentials","connection","database","hosts","hostname","port","authentication","registerLogin","SaveModal","TextInput","placeholder","style","marginBottom","LoadModal","loadDashboard","cognosApi","dashboard","initialize","openDashboard","dashboardSpec","dashboardAPI","setMode","MODES","EDIT","getSpec","on","EVENTS","DIRTY","dashSpec","WarningModal","handleClose","kind","title","subtitle","iconDescription","statusIconDescription","onClose","onCloseButtonClick","timeout","StandardDashboardModal","SuccessModal","HeaderIcc","renderButton","languageIcons","openSidePanel","setOpenSidePanel","prefix","onClick","pathname","includes","fill","menuLinkName","acc","toUpperCase","expanded","height","maxWidth","InfoTable","filtered","DataTable","rows","headers","header","useZebraStyles","stickyHeader","size","getHeaderProps","getTableProps","getTableContainerProps","TableContainer","TableToolbar","TableToolbarContent","Button","sendScore","Table","TableHead","TableRow","TableHeader","TableBody","row","cells","cell","TableCell","BasicTabs","Tabs","scrollIntoView","type","Tab","ConfigModal","selectedInstance","setSelectedInstance","selectedCredential","setSelectedCredential","noConnection","resourceKeys","Loading","Dashboard","storedLanguage","DataTableSkeleton","SearchPage","intentGroups","setIntentGroups","searchValue","setSearchValue","auxArray","values","groupByIntent","sort","Search","className","light","disabled","Accordion","intent","toLowerCase","replace","AccordionItem","_typeof","Symbol","iterator","constructor","prototype","_createClass","defineProperties","i","descriptor","enumerable","configurable","writable","defineProperty","Constructor","protoProps","staticProps","CognosApi","options","instance","TypeError","_classCallCheck","this","node","_node","_cognosURL","cognosRootURL","_testURL","testURL","_sessionCode","sessionCode","_initTimeout","initTimeout","_apiKey","_createUID","_pendingRequests","_eventCallbacks","_eventReverseLookup","SUPPORTED_LANGUAGES","_language","_message_regex","RegExp","updateModuleDefinitions","_updateModuleDefinitions","bind","_this","_readyPromise","_initializeContainer","_initializeService","_sendMessage","apiId","actionId","APISERVICE_INIT","eventName","cb","APISERVICE_ON","parameters","Array","slice","call","arguments","APISERVICE_OFF","container","createElement","src","_buildSourceUrl","setAttribute","APISERVICE_CLASS","innerHTML","appendChild","_target","contentWindow","_targetOrigin","exec","origin","_this2","_destroyService","_cleanupApiService","_cleanupContainer","root","indexOf","params","perspective","apiKey","parentOrigin","contentLanguage","k","encodeURIComponent","join","_this3","_messageHandler","removeEventListener","forEach","memberName","iframes","getElementsByClassName","removeChild","_this4","_receiveMessage","addEventListener","_registerResponseCallbacks","_this5","APISERVICE_DESTROY","success","fail","_registerEventCallbacks","_unregisterEventCallbacks","postMessage","_createMessage","event","_parseMessage","_rejectResponseCallbacks","payload","_resolveResponseCallbacks","resolvedAPI","_injectAPI","_handleEventCallbacks","APIHEADER","APIHEADER_DELIMITER","result","lastIndex","apiSpec","_this6","_getAPIMethod","methodName","_this7","_len","args","_key","_len2","_key2","_len3","_key3","dataSources","sources","moduleClientIds","source","clientId","newModules","_doModuleUpdate","cloneDashboardSpec","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","next","done","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","newModule","module","newId","return","prepend","uid","Date","now","valueOf","__uid","toString","REQUEST_ERROR","APIHEADER_MARKER","APIHEADER_VERSION","freeze","cs","da","de","fi","fr","hr","hu","it","ja","kk","ko","nb","nl","no","pl","ro","ru","sl","sv","th","tr","zh","CognosConfigModal","cognosInstance","setCognosInstance","cloudantInstance","setCloudantInstance","db2Instance","setDb2Instance","client_id","client_secret","jdbc_url","handleCognosCredentials","handleCloudantCredentials","handleDb2Credentials","hasForm","CognosPage","renderSave","setRenderSave","initializeDashboard","session","getElementById","storagedDashboard","Login","token","setToken","invalid","setInvalid","passcode","some","primary_owner","ibmid","toLocaleDateString","timeZone","hour","minute","second","required","href","Routes","exact","path","component","ReactDOM","render","StrictMode"],"mappings":"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,qBAAU,WACkB,iBAAtBN,IACF5C,aAAamD,QAAQ,qBAAsBP,MAC5C,CAACA,KACJM,qBAAU,WACwB,uBAA5BJ,IACF9C,aAAamD,QACX,2BACAL,MAEH,CAACA,KACJI,qBAAU,WACuB,sBAA3BF,IACFhD,aAAamD,QAAQ,0BAA2BH,MACjD,CAACA,KAEJE,oBAAS,sBAAC,sBAAA7H,EAAA,yDACoB,KAAxB6B,EAAQF,OAAOC,KADX,gCAEA7B,IACHM,MAAK,SAACC,GAAD,OAASoB,EAAYpB,MAC1BE,OAAM,SAACC,GACsB,MAAxBA,EAAIsH,SAASC,QAAgB7G,EAAQ8G,KAAK,aAL5C,uBAOArH,IACHP,MAAK,SAACC,GACL8B,EAAa9B,GACb4C,IAAkB,MAEnB1C,OAAM,SAACC,GACsB,MAAxBA,EAAIsH,SAASC,QAAgB7G,EAAQ8G,KAAK,aAb5C,2CAgBP,CAACpG,IAGF,cAACd,EAAmBmH,SAApB,CACEC,MAAO,CACL7G,WACAC,cACAc,UACAC,aACAC,WACAC,cACAC,iBACAC,oBACAW,iBACAC,oBACAC,iBACAC,oBACAC,eACAC,kBACAC,0BACAC,6BACAC,eACAC,kBACAC,kBACAC,qBACArB,aACAC,gBACAC,mBACAC,sBACAC,mBACAC,sBACAG,mBACAC,sBACAH,kBACAC,qBACAe,WACAC,cACAC,iBACAC,oBACAC,gBACAC,mBACAC,iBACAC,oBACAC,mBACAC,sBACAG,oBACAC,uBACAC,kBACAC,qBACAC,kBACAC,qBACAG,eACAC,kBACAC,eACAC,kBACAC,kBACAC,qBACAC,OACAC,UACAC,WACAC,cACAC,mBACAC,sBACAC,UACAC,aACAC,eACAC,kBACAC,eACAC,iBACAnB,wBACAC,2BACAmB,aACAC,gBACAC,qBACAC,wBACAC,cACAC,iBACAC,gBACAC,mBACAC,yBACAC,4BACAC,iBACAC,oBACAC,0BACAC,6BACAC,qBACAC,wBACAC,sBACAC,yBACAC,4BACAC,+BACAC,2BACAC,8BACAzG,UACAM,WACAC,cACAG,UACAC,aACAN,YACAY,gBAhGJ,SAmGGlB,IAKA,SA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","file":"static/js/main.a6bfd1c4.chunk.js","sourcesContent":["import axios from \"axios\";\n\nconst api = axios.create({\n  baseURL:\n    process.env.NODE_ENV === \"production\"\n      ? `${window.location.protocol}//${window.location.host}`\n      : \"http://localhost:5000\",\n});\n\nexport default api;\n","import api from \"../services/api\";\n\nexport async function getAccounts() {\n  return new Promise((resolve, reject) => {\n    api\n      .get(\"/ibmid/accounts\")\n      .then((res) => {\n        resolve(res.data);\n      })\n      .catch((err) => reject(err));\n  });\n}\n\nexport async function switchAccount(accountId) {\n  return new Promise((resolve, reject) => {\n    api\n      .get(`/ibmid/accounts/switch?account_id=${accountId}`)\n      .then((res) => resolve(res.data))\n      .catch((err) => reject(err));\n  });\n}\n\nexport async function getResources() {\n  return new Promise((resolve, reject) => {\n    api\n      .get(`/resources`)\n      .then((res) => {\n        resolve(res.data);\n      })\n      .catch((err) => reject(err));\n  });\n}\n\nexport async function getResourceKeys(resourceId) {\n  return new Promise((resolve, reject) => {\n    api\n      .get(`/ibmid/resources/${resourceId}/resource_keys`)\n      .then((res) => resolve(res.data))\n      .catch((err) => reject(err));\n  });\n}\n","import React, { useContext, useState, useEffect, createContext } from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nimport { getAccounts, getResources } from \"../helpers/apiCalls\";\nconst GlobalStateContext = createContext({});\n\nexport default function GlobalStateProvider({ children }) {\n  const history = useHistory();\n\n  const [language, setLanguage] = useState(\"en\");\n\n  const [accounts, setAccounts] = useState({ resources: [] });\n  const [account, setAccount] = useState({\n    entity: {\n      name: \"\",\n    },\n  });\n  const [resources, setResources] = useState({\n    cognos: {\n      body: {\n        resources: [\n          {\n            guid: \"\",\n            name: \"\",\n          },\n        ],\n      },\n    },\n    cloudant: {\n      body: {\n        resources: [\n          {\n            guid: \"\",\n            name: \"\",\n          },\n        ],\n      },\n    },\n    db2: {\n      body: {\n        resources: [\n          {\n            guid: \"\",\n            name: \"\",\n          },\n        ],\n      },\n    },\n  });\n\n  const [loading, setLoading] = useState(true);\n\n  const [helpOpen, setHelpOpen] = useState(false);\n  const [cognosHelpOpen, setCognosHelpOpen] = useState(false);\n\n  const [configOpen, setConfigOpen] = useState(false);\n  const [cognosConfigOpen, setCognosConfigOpen] = useState(false);\n  const [accountModalOpen, setAccountModalOpen] = useState(false);\n  const [accountLoading, setAccountLoading] = useState(false);\n\n  const [accountSelected, setAccountSelected] = useState(false);\n\n  const [saveModalOpen, setSaveModalOpen] = useState(false);\n  const [loadModalOpen, setLoadModalOpen] = useState(false);\n\n  const [warningOpen, setWarningOpen] = useState(false);\n  const [standardDashboardModal, setStandardDashboardModal] = useState(false);\n  const [successOpen, setSuccessOpen] = useState(false);\n\n  const [unsavedChanges, setUnsavedChanges] = useState(false);\n\n  const [rowData, setRowData] = useState([]);\n  const [conversations, setConversations] = useState([]);\n\n  const [cognosClient, setCognosClient] = useState(null);\n  const [cognosSession, setCognosSession] = useState({});\n  const [cognosDashboard, setCognosDashboard] = useState(null);\n\n  const [connectionString, setConnectionString] = useState(\n    localStorage.getItem(\"connectionString\")\n  );\n\n  const [cognosUsername, setCognosUsername] = useState(\n    localStorage.getItem(\"cognosUsername\")\n  );\n  const [cognosPassword, setCognosPassword] = useState(\n    localStorage.getItem(\"cognosPassword\")\n  );\n  const [defaultDashboardName, setDefaultDashboardName] = useState(\n    localStorage.getItem(\"defaultDashboardName\")\n  );\n\n  const [cloudantApi, setCloudantApi] = useState(\n    localStorage.getItem(\"cloudantApi\")\n  );\n  const [cloudantUrl, setCloudantUrl] = useState(\n    localStorage.getItem(\"cloudantUrl\")\n  );\n  const [cloudantDbName, setCloudantDbName] = useState(\"dashboards\");\n\n  const [xsd, setXsd] = useState(\"https://ibm.com/daas/module/1.0/module.xsd\");\n\n  const [jdbcUrl, setJdbcUrl] = useState(localStorage.getItem(\"jdbcUrl\"));\n\n  const [driverClassName, setDriverClassName] = useState(\n    \"com.ibm.db2.jcc.DB2Driver\"\n  );\n  const [schema, setSchema] = useState(\"CURATOR\");\n  const [db2Username, setDb2UserName] = useState(\n    localStorage.getItem(\"db2Username\")\n  );\n  const [db2Password, setDb2Passwor] = useState(\n    localStorage.getItem(\"db2Password\")\n  );\n\n  const [logsTable, setLogsTable] = useState(\"LOGS\");\n  const [conversationTable, setConversationTable] = useState(\"CONVERSATIONS\");\n  const [callsTable, setCallsTable] = useState(\"CALLS\");\n  const [contextTable, setContextTable] = useState(\"CONTEXTVARIABLES\");\n  const [conversationPathTable, setConversationPathTable] =\n    useState(\"CONVERSATIONPATH\");\n  const [overviewTable, setOverviewTable] = useState(\"OVERVIEW\");\n  const [classDistributionTable, setClassDistributionTable] =\n    useState(\"CLASSDISTRIBUTION\");\n  const [precisionAtKTable, setPrecisionAtKTable] = useState(\"PRECISIONATK\");\n  const [classAccuracyTable, setClassAccuracyTable] = useState(\"CLASSACCURACY\");\n  const [pairWiseClassErrorsTable, setPairWiseClassErrorsTable] = useState(\n    \"PAIRWISECLASSERRORS\"\n  );\n  const [accuracyVsCoverageTable, setAccuracyVsCoverageTable] =\n    useState(\"ACCURACYVSCOVERAGE\");\n\n  useEffect(() => {\n    localStorage.setItem(\"connectionString\", connectionString);\n  }, [connectionString]);\n\n  useEffect(() => {\n    localStorage.setItem(\"cognosUsername\", cognosUsername);\n  }, [cognosUsername]);\n  useEffect(() => {\n    localStorage.setItem(\"cognosPassword\", cognosPassword);\n  }, [cognosPassword]);\n\n  useEffect(() => {\n    localStorage.setItem(\"cloudantApi\", cloudantApi);\n  }, [cloudantApi]);\n  useEffect(() => {\n    localStorage.setItem(\"cloudantUrl\", cloudantUrl);\n  }, [cloudantUrl]);\n  useEffect(() => {\n    if (cloudantDbName != \"dashboards\")\n      localStorage.setItem(\"cloudantDbName\", cloudantDbName);\n  }, [cloudantDbName]);\n  useEffect(() => {\n    localStorage.setItem(\"defaultDashboardName\", defaultDashboardName);\n  }, [defaultDashboardName]);\n\n  useEffect(() => {\n    if (xsd != \"https://ibm.com/daas/module/1.0/module.xsd\")\n      localStorage.setItem(\"xsd\", xsd);\n  }, [xsd]);\n  useEffect(() => {\n    localStorage.setItem(\"jdbcUrl\", jdbcUrl);\n  }, [jdbcUrl]);\n  useEffect(() => {\n    if (driverClassName != \"com.ibm.db2.jcc.DB2Driver\")\n      localStorage.setItem(\"driverClassName\", driverClassName);\n  }, [driverClassName]);\n  useEffect(() => {\n    localStorage.setItem(\"db2Username\", db2Username);\n  }, [db2Username]);\n  useEffect(() => {\n    localStorage.setItem(\"db2Password\", db2Password);\n  }, [db2Password]);\n\n  //tables\n  useEffect(() => {\n    if (logsTable != \"LOGS\") localStorage.setItem(\"logsTable\", logsTable);\n  }, [logsTable]);\n  useEffect(() => {\n    if (conversationTable != \"CONVERSATIONS\")\n      localStorage.setItem(\"conversationTable\", conversationTable);\n  }, [conversationTable]);\n  useEffect(() => {\n    if (callsTable != \"CALLS\") localStorage.setItem(\"callsTable\", callsTable);\n  }, [callsTable]);\n  useEffect(() => {\n    if (contextTable != \"CONTEXTVARIABLES\")\n      localStorage.setItem(\"contextTable\", contextTable);\n  }, [contextTable]);\n  useEffect(() => {\n    if (conversationPathTable != \"CONVERSATIONPATH\")\n      localStorage.setItem(\"conversationPathTable\", conversationPathTable);\n  }, [conversationPathTable]);\n  useEffect(() => {\n    if (overviewTable != \"OVERVIEW\")\n      localStorage.setItem(\"overviewTable\", overviewTable);\n  }, [overviewTable]);\n  useEffect(() => {\n    if (classDistributionTable != \"CLASSDISTRIBUTION\")\n      localStorage.setItem(\"classDistributionTable\", classDistributionTable);\n  }, [classDistributionTable]);\n  useEffect(() => {\n    if (precisionAtKTable != \"PRECISIONATK\")\n      localStorage.setItem(\"precisionAtKTable\", precisionAtKTable);\n  }, [precisionAtKTable]);\n  useEffect(() => {\n    if (classAccuracyTable != \"CLASSACCURACY\")\n      localStorage.setItem(\"classAccuracyTable\", classAccuracyTable);\n  }, [classAccuracyTable]);\n  useEffect(() => {\n    if (pairWiseClassErrorsTable != \"PAIRWISECLASSERRORS\")\n      localStorage.setItem(\n        \"pairWiseClassErrorsTable\",\n        pairWiseClassErrorsTable\n      );\n  }, [pairWiseClassErrorsTable]);\n  useEffect(() => {\n    if (accuracyVsCoverageTable != \"ACCURACYVSCOVERAGE\")\n      localStorage.setItem(\"accuracyVsCoverageTable\", accuracyVsCoverageTable);\n  }, [accuracyVsCoverageTable]);\n\n  useEffect(async () => {\n    if (account.entity.name !== \"\") {\n      await getAccounts()\n        .then((res) => setAccounts(res))\n        .catch((err) => {\n          if (err.response.status === 401) history.push(\"/login\");\n        });\n      await getResources()\n        .then((res) => {\n          setResources(res);\n          setAccountLoading(false);\n        })\n        .catch((err) => {\n          if (err.response.status === 401) history.push(\"/login\");\n        });\n    }\n  }, [account]);\n\n  return (\n    <GlobalStateContext.Provider\n      value={{\n        language,\n        setLanguage,\n        loading,\n        setLoading,\n        helpOpen,\n        setHelpOpen,\n        cognosHelpOpen,\n        setCognosHelpOpen,\n        saveModalOpen,\n        setSaveModalOpen,\n        loadModalOpen,\n        setLoadModalOpen,\n        warningOpen,\n        setWarningOpen,\n        standardDashboardModal,\n        setStandardDashboardModal,\n        successOpen,\n        setSuccessOpen,\n        unsavedChanges,\n        setUnsavedChanges,\n        configOpen,\n        setConfigOpen,\n        cognosConfigOpen,\n        setCognosConfigOpen,\n        accountModalOpen,\n        setAccountModalOpen,\n        accountSelected,\n        setAccountSelected,\n        accountLoading,\n        setAccountLoading,\n        rowData,\n        setRowData,\n        conversations,\n        setConversations,\n        cognosClient,\n        setCognosClient,\n        cognosSession,\n        setCognosSession,\n        cognosDashboard,\n        setCognosDashboard,\n        connectionString,\n        setConnectionString,\n        cognosUsername,\n        setCognosUsername,\n        cognosPassword,\n        setCognosPassword,\n        cloudantApi,\n        setCloudantApi,\n        cloudantUrl,\n        setCloudantUrl,\n        cloudantDbName,\n        setCloudantDbName,\n        xsd,\n        setXsd,\n        jdbcUrl,\n        setJdbcUrl,\n        driverClassName,\n        setDriverClassName,\n        schema,\n        setSchema,\n        db2Username,\n        setDb2UserName,\n        db2Password,\n        setDb2Passwor,\n        defaultDashboardName,\n        setDefaultDashboardName,\n        logsTable,\n        setLogsTable,\n        conversationTable,\n        setConversationTable,\n        callsTable,\n        setCallsTable,\n        contextTable,\n        setContextTable,\n        conversationPathTable,\n        setConversationPathTable,\n        overviewTable,\n        setOverviewTable,\n        classDistributionTable,\n        setClassDistributionTable,\n        precisionAtKTable,\n        setPrecisionAtKTable,\n        classAccuracyTable,\n        setClassAccuracyTable,\n        pairWiseClassErrorsTable,\n        setPairWiseClassErrorsTable,\n        accuracyVsCoverageTable,\n        setAccuracyVsCoverageTable,\n        history,\n        accounts,\n        setAccounts,\n        account,\n        setAccount,\n        resources,\n        setResources,\n      }}\n    >\n      {children}\n    </GlobalStateContext.Provider>\n  );\n}\n\nexport function useGlobalState() {\n  const context = useContext(GlobalStateContext);\n\n  if (!context) {\n    throw new Error(\"useGlobalState must be used within a GlobalStateProvider\");\n  }\n\n  return context;\n}\n","export default {\n  pt: {\n    headerSwitcher: {\n      save: \"Salvar\",\n      upToDate: \"Já atualizado\",\n      load: \"Load\",\n    },\n    infoTable: {\n      sendButton: \"Enviar para o BD\",\n      group: \"Grupo\",\n    },\n    accountSelectionModal: {\n      heading: \"Selecione a conta desejada\",\n      label: \"Contas disponíveis\",\n      primaryText: \"Selecionar\",\n      secondaryText: \"Cancelar\",\n      inputLabel1: \"Contas\",\n    },\n    modal: {\n      heading: \"Informações de conexão com Db2\",\n      label: \"Instância e Tabela consultadas\",\n      primaryText: \"Recarregar\",\n      secondaryText: \"Salvar\",\n      selectAnOption: \"Selecione uma opção\",\n      alert: \"Por favor, selecione uma das instâncias listadas\",\n      inputLabel1: \"Selecione a instância do Db2 desejada\",\n      inputLabel2: \"Insira o título da tabela a ser consultada\",\n    },\n    cognosModal: {\n      heading: \"Credenciais de uso do Cognos\",\n      label: \"Instâncias consultadas\",\n      primaryText: \"Recarregar\",\n      secondaryText: \"Salvar\",\n      tab1: \"Cognos\",\n      tab2: \"Cloudant\",\n      tab3: \"Db2\",\n      tab4: \"Tabelas\",\n      selectAnOption: \"Selecione uma opção\",\n      alert: \"Por favor, selecione uma das instâncias listadas\",\n      inputLabel1: \"Selecione a instância do Cognos desejada\",\n      inputLabel2: \"Selecione a instância do Cloudant desejada\",\n      inputLabel3: \"Insira a database do Cloudant desejada\",\n      inputLabel4: \"Selecione a instância do Db2 desejada\",\n      inputLabel5: \"Insira o link do módulo xsd\",\n      inputLabel6: \"Insira o driver Jdbc\",\n      inputLabel7: \"Tabela de logs\",\n      inputLabel8: \"Tabela de conversas\",\n      inputLabel9: \"Tabela de telefonemas\",\n      inputLabel10: \"Tabela de variáveis de contexto\",\n      inputLabel11: \"Tabela de caminhos de conversa\",\n      inputLabel12: \"Tabela de visão geral\",\n      inputLabel13: \"Tabela de distribuição de classes\",\n      inputLabel14: \"Tabela de precisão @k\",\n      inputLabel15: \"Tabela de acurácia de classes\",\n      inputLabel16: \"Tabela de intenções confundidas\",\n      inputLabel17: \"Tabela de acurácia vs cobertura\",\n    },\n    saveModal: {\n      heading:\n        \"Insira o nome que deseja dar ao dashboard. Este será automaticamente configurado como Dashboard default\",\n      label: \"Salvar Dashboard no Cloudant\",\n      primaryText: \"Salvar\",\n      secondaryText: \"Cancelar\",\n      inputLabel1: \"Nome (ID) do Dashboard\",\n    },\n    loadModal: {\n      heading:\n        \"Insira o nome do dashboard que deseja buscar. Este será automaticamente configurado como Dashboard default\",\n      label: \"Buscar Dashboard no Cloudant\",\n      primaryText: \"Buscar\",\n      secondaryText: \"Cancelar\",\n      inputLabel1: \"Nome (ID) do Dashboard\",\n    },\n    modalHelp: {\n      heading: \"Ajuda\",\n      text: \"Esta tabela exibe a troca de mensagens entre cliente e Assistente, destacando qual foi a intent compreendida pelo assistente na mensagem recebida. Com estas informações, o curador pode avaliar o desempenho do assistente no nível de mensagem.\",\n    },\n    cognosModalHelp: {\n      heading: \"Ajuda\",\n      text: \"Esta página exibe um dashboard interativo que apresenta métricas para auxiliar o processo de curadoria do assitente.\",\n    },\n    modalWarning: {\n      heading: \"Aviso\",\n      text: \"Não foi possível realizar a conexão com a base de dados através dos dados fornecidos. Por favor verifique as informações inseridas e tente novamente.\",\n      caption: \"\",\n    },\n    standardDashboardModal: {\n      heading: \"Aviso\",\n      text: \"Inicializando Dashboard Padrão.\",\n      caption: \"\",\n    },\n    modalSuccess: {\n      heading: \"Sucesso!\",\n      text: \"Conexão realizada com sucesso.\",\n      caption: \"\",\n    },\n  },\n  es: {\n    headerSwitcher: {\n      save: \"Guardar\",\n      upToDate: \"Já actualizado\",\n      load: \"Cargar\",\n    },\n    infoTable: {\n      sendButton: \"Enviar a BD\",\n      group: \"Grupo\",\n    },\n    accountSelectionModal: {\n      heading: \"Seleccione la cuenta deseada\",\n      label: \"Cuentas disponibles\",\n      primaryText: \"Seleccione\",\n      secondaryText: \"Cancelar\",\n      inputLabel1: \"Cuentas\",\n    },\n    modal: {\n      heading: \"Información de conexión de Db2\",\n      label: \"Instancia y Tabla consultada\",\n      primaryText: \"Recargar\",\n      secondaryText: \"Guardar\",\n      selectAnOption: \"Seleccione una opción\",\n      alert: \"Seleccione una de las instancias enumeradas\",\n      inputLabel1: \"Seleccione la instancia de Db2 deseada\",\n      inputLabel2: \"Introduzca el título de la tabla a consultar\",\n    },\n    cognosModal: {\n      heading: \"Credenciales de uso de Cognos\",\n      label: \"Instancias consultadas\",\n      primaryText: \"Recargar\",\n      secondaryText: \"Guardar\",\n      tab1: \"Cognos\",\n      tab2: \"Cloudant\",\n      tab3: \"Db2\",\n      tab4: \"Tablas\",\n      selectAnOption: \"Seleccione una opción\",\n      alert: \"Seleccione una de las instancias enumeradas\",\n      inputLabel1: \"Seleccione la instancia de Cognos deseada\",\n      inputLabel2: \"Seleccione la instancia de Cloudant deseada\",\n      inputLabel3: \"Inserte la base de datos Cloudant deseada\",\n      inputLabel4: \"Seleccione la instancia de Db2 deseada\",\n      inputLabel5: \"Inserte el enlace del módulo xsd\",\n      inputLabel6: \"Inserte el driver Jdbc\",\n      inputLabel7: \"Tabla de registros\",\n      inputLabel8: \"Tabla de conversaciónes\",\n      inputLabel9: \"Tabla de llamadas telefonicas\",\n      inputLabel10: \"Tabla de variables de contexto\",\n      inputLabel11: \"Tabla de ruta de conversación\",\n      inputLabel12: \"Tabla de resumen\",\n      inputLabel13: \"Tabla de distribución de clases\",\n      inputLabel14: \"Tabla de precisión @k\",\n      inputLabel15: \"Tabla de precisión de clase\",\n      inputLabel16: \"Tabla de intenciones confusas\",\n      inputLabel17: \"Tabla de precisión versus cobertura\",\n    },\n    saveModal: {\n      heading:\n        \"Ingrese el nombre que desea darle al Dashboard. Esto se establecerá automáticamente como el Dashboard default\",\n      label: \"Guardar Dashboard en Cloudant\",\n      primaryText: \"Salvar\",\n      secondaryText: \"Cancelar\",\n      inputLabel1: \"Nombre (ID) del Dashboard\",\n    },\n    loadModal: {\n      heading:\n        \"Ingrese el nombre del Dashboard que desea buscar. Esto se establecerá automáticamente como el Dashboard default\",\n      label: \"Busca de Dashboard en Cloudant\",\n      primaryText: \"Buscar\",\n      secondaryText: \"Cancelar\",\n      inputLabel1: \"Nombre (ID) del Dashboard\",\n    },\n    modalHelp: {\n      heading: \"Ayuda\",\n      text: \"Esta tabla muestra el intercambio de mensajes entre el cliente y el Asistente, destacando qué intención entendió el asistente en el mensaje recibido. Con esta información, el curador puede evaluar el desempeño del asistente a nivel del mensaje.\",\n    },\n    cognosModalHelp: {\n      heading: \"Ayuda\",\n      text: \"Esta página muestra un tablero interactivo que presenta métricas para respaldar el proceso de curación del asistente.\",\n    },\n    modalWarning: {\n      heading: \"Error!\",\n      text: \"No fue posible conectarse a la base de datos utilizando los datos proporcionados. Verifique la información ingresada y vuelva a intentarlo.\",\n      caption: \"\",\n    },\n    standardDashboardModal: {\n      heading: \"Aviso\",\n      text: \"Inicializando el Dashboard predeterminado.\",\n      caption: \"\",\n    },\n    modalSuccess: {\n      heading: \"Éxito!\",\n      text: \"Conexión exitosa.\",\n      caption: \"\",\n    },\n  },\n  en: {\n    headerSwitcher: {\n      save: \"Save\",\n      upToDate: \"Up to date\",\n      load: \"Load\",\n    },\n    infoTable: {\n      sendButton: \"Send to DB\",\n      group: \"Group\",\n    },\n    accountSelectionModal: {\n      heading: \"Select the desired account\",\n      label: \"Available accounts\",\n      primaryText: \"Select\",\n      secondaryText: \"Cancel\",\n      inputLabel1: \"Accounts\",\n    },\n    modal: {\n      heading: \"Db2 conection information\",\n      label: \"Instance and Table to be consulted\",\n      primaryText: \"Reload\",\n      secondaryText: \"Save\",\n      selectAnOption: \"Select an option\",\n      alert: \"Please select one of the listed instances\",\n      inputLabel1: \"Select the desired Db2 instance\",\n      inputLabel2: \"Enter the title of the table to be queried\",\n    },\n    cognosModal: {\n      heading: \"Cognos credentials\",\n      label: \"Consulted Instances\",\n      primaryText: \"Reload\",\n      secondaryText: \"Save\",\n      tab1: \"Cognos\",\n      tab2: \"Cloudant\",\n      tab3: \"Db2\",\n      tab4: \"Tables\",\n      selectAnOption: \"Select an option\",\n      alert: \"Please select one of the listed instances\",\n      inputLabel1: \"Select the desired Cognos instance\",\n      inputLabel2: \"Select the desired Cloudant instance\",\n      inputLabel3: \"Enter the desired Cloudant database\",\n      inputLabel4: \"Select the desired Db2 instance\",\n      inputLabel5: \"Enter the xsd module link\",\n      inputLabel6: \"Enter the Jdbc driver\",\n      inputLabel7: \"Logs table\",\n      inputLabel8: \"Conversations table\",\n      inputLabel9: \"Calls table\",\n      inputLabel10: \"Context variables table\",\n      inputLabel11: \"Conversation path table\",\n      inputLabel12: \"Overview table\",\n      inputLabel13: \"Class Distribution table\",\n      inputLabel14: \"Precision @k table\",\n      inputLabel15: \"Class accuracy table\",\n      inputLabel16: \"Pair wise class errors table\",\n      inputLabel17: \"Accuracy vs coverage table\",\n    },\n    saveModal: {\n      heading:\n        \"Enter the name you want to give the Dashboard. This will automatically be set as the default Dashboard\",\n      label: \"Save Dashboard in Cloudant\",\n      primaryText: \"Save\",\n      secondaryText: \"Cancel\",\n      inputLabel1: \"Dashboard name (ID)\",\n    },\n    loadModal: {\n      heading:\n        \"Enter the name of the Dashboard you want to search. This will automatically be set as the default Dashboard\",\n      label: \"Search Dashboard in Cloudant\",\n      primaryText: \"Search\",\n      secondaryText: \"Cancel\",\n      inputLabel1: \"Dashboard name (ID)\",\n    },\n    modalHelp: {\n      heading: \"Help\",\n      text: \"This table displays the exchange of messages between client and Assistant, highlighting what intent was understood by the assistant in the received message. With this information, the curator can assess the assistant's performance at the message level.\",\n    },\n    cognosModalHelp: {\n      heading: \"Help\",\n      text: \"This page displays an interactive dashboard that presents metrics to support the Assistant curation process.\",\n    },\n    modalWarning: {\n      heading: \"Error!\",\n      text: \"It was not possible to connect through the supplied data. Please check the information and try again.\",\n      caption: \"\",\n    },\n    standardDashboardModal: {\n      heading: \"Warning\",\n      text: \"Initializing default Dashboard.\",\n      caption: \"\",\n    },\n    modalSuccess: {\n      heading: \"Success!\",\n      text: \"Successfully connected.\",\n      caption: \"\",\n    },\n  },\n};\n","import { useEffect, useState } from \"react\";\nimport { useGlobalState } from \"../../hooks/globalState\";\nimport { Modal, Select, SelectItem } from \"carbon-components-react\";\nimport { switchAccount } from \"../../helpers/apiCalls\";\nimport textLanguage from \"../../helpers/languagesConfig\";\n\nimport \"./style.css\";\n\nexport default function AccountSelectionModal({ modalOpen }) {\n  const {\n    setLoading,\n    accountModalOpen,\n    setAccountModalOpen,\n    setWarningOpen,\n    setSuccessOpen,\n    accounts,\n    setAccount,\n    setAccountLoading,\n    language,\n  } = useGlobalState();\n\n  async function handleSubmit() {\n    setAccountLoading(true);\n    setWarningOpen(false);\n    setSuccessOpen(false);\n    setAccountModalOpen(false);\n    setLoading(true);\n    modalOpen(true);\n  }\n\n  return (\n    <Modal\n      open={accountModalOpen}\n      modalHeading={textLanguage[language].accountSelectionModal.heading}\n      modalLabel={textLanguage[language].accountSelectionModal.label}\n      primaryButtonText={\n        textLanguage[language].accountSelectionModal.primaryText\n      }\n      secondaryButtonText={\n        textLanguage[language].accountSelectionModal.secondaryText\n      }\n      onRequestClose={() => {\n        setAccountModalOpen(false);\n      }}\n      onRequestSubmit={handleSubmit}\n      preventCloseOnClickOutside\n    >\n      <Select\n        id=\"select-1\"\n        invalidText=\"A valid value is required\"\n        labelText={textLanguage[language].accountSelectionModal.inputLabel1}\n        onChange={(e) => {\n          switchAccount(JSON.parse(e.target.value).metadata.guid).then(() => {\n            localStorage.setItem(\"savedAccount\", e.target.value);\n            setAccount(JSON.parse(e.target.value));\n          });\n        }}\n      >\n        {accounts &&\n          accounts.resources.map((resource) => (\n            <SelectItem\n              text={resource.entity.name}\n              value={JSON.stringify(resource)}\n            />\n          ))}\n      </Select>\n    </Modal>\n  );\n}\n","import { useGlobalState } from \"../../hooks/globalState\";\nimport { Modal } from \"carbon-components-react\";\nimport textLanguage from \"../../helpers/languagesConfig\";\nimport \"./style.css\";\n\nexport default function HelpModal() {\n  const { language, helpOpen, setHelpOpen } = useGlobalState();\n\n  return (\n    <Modal\n      open={helpOpen}\n      modalHeading={textLanguage[language].modalHelp.heading}\n      onRequestClose={() => {\n        setHelpOpen(false);\n      }}\n      preventCloseOnClickOutside\n      passiveModal\n    >\n      <p>{textLanguage[language].modalHelp.text}</p>\n    </Modal>\n  );\n}\n","import { useGlobalState } from \"../../hooks/globalState\";\nimport { Modal } from \"carbon-components-react\";\nimport textLanguage from \"../../helpers/languagesConfig\";\nimport \"./style.css\";\n\nexport default function CognosHelpModal() {\n  const { language, cognosHelpOpen, setCognosHelpOpen } = useGlobalState();\n\n  return (\n    <Modal\n      open={cognosHelpOpen}\n      modalHeading={textLanguage[language].cognosModalHelp.heading}\n      onRequestClose={() => {\n        setCognosHelpOpen(false);\n      }}\n      preventCloseOnClickOutside\n      passiveModal\n    >\n      <p>{textLanguage[language].cognosModalHelp.text}</p>\n    </Modal>\n  );\n}\n","import { useGlobalState } from \"../../hooks/globalState\";\nimport PropTypes from \"prop-types\";\nimport Rating from \"@mui/material/Rating\";\nimport SentimentVeryDissatisfiedIcon from \"@mui/icons-material/SentimentVeryDissatisfied\";\nimport SentimentDissatisfiedIcon from \"@mui/icons-material/SentimentDissatisfied\";\nimport SentimentSatisfiedIcon from \"@mui/icons-material/SentimentSatisfied\";\nimport SentimentSatisfiedAltIcon from \"@mui/icons-material/SentimentSatisfiedAltOutlined\";\nimport SentimentVerySatisfiedIcon from \"@mui/icons-material/SentimentVerySatisfied\";\nimport { createRows } from \"../../helpers/helpers\";\n\nconst customIcons = {\n  1: {\n    icon: <SentimentVeryDissatisfiedIcon />,\n    label: \"Very Dissatisfied\",\n  },\n  2: {\n    icon: <SentimentDissatisfiedIcon />,\n    label: \"Dissatisfied\",\n  },\n  3: {\n    icon: <SentimentSatisfiedIcon />,\n    label: \"Neutral\",\n  },\n  4: {\n    icon: <SentimentSatisfiedAltIcon />,\n    label: \"Satisfied\",\n  },\n  5: {\n    icon: <SentimentVerySatisfiedIcon />,\n    label: \"Very Satisfied\",\n  },\n};\n\nfunction IconContainer(props) {\n  const { value, ...other } = props;\n  return <span {...other}>{customIcons[value].icon}</span>;\n}\n\nIconContainer.propTypes = {\n  value: PropTypes.number.isRequired,\n};\n\nexport default function BasicRating({ conversationID, logID, defaultValue }) {\n  const { conversations, setConversations, setRowData } = useGlobalState();\n\n  function updateScore(newValue) {\n    conversations[conversationID].map((log) => {\n      if (log.LOGID === logID) {\n        log.SCORE = newValue;\n        createRows(conversations, setRowData);\n      }\n    });\n  }\n\n  return (\n    <Rating\n      name=\"highlight-selected-only\"\n      defaultValue={defaultValue}\n      IconContainerComponent={IconContainer}\n      highlightSelectedOnly\n      sx={{\n        \"& .MuiRating-iconFilled\": {\n          color: \"#0E61FE\",\n        },\n        \"& .MuiRating-iconEmpty\": {\n          color: \"#b5b5b5\",\n        },\n      }}\n      onChange={(e, newValue) => {\n        updateScore(newValue);\n      }}\n    />\n  );\n}\n","import BasicRating from \"../components/Rating\";\nimport api from \"../services/api\";\nimport axios from \"axios\";\n\nexport function createRows(conversations, setRowData) {\n  let rowsAux = [];\n\n  Object.entries(conversations).map(([key, value]) => {\n    conversations[key].map((log) => {\n      let rowAux = {};\n\n      rowAux.id = log.LOGID;\n      rowAux.CONVERSATIONID = log.CONVERSATIONID;\n      rowAux.LOGID = log.LOGID;\n      rowAux.CLIENTMESSAGE = log.CLIENTMESSAGE;\n      rowAux.ASSISTANTMESSAGE = log.ASSISTANTMESSAGE;\n      rowAux.FIRSTINTENT = log.FIRSTINTENT;\n      rowAux.SCORE = (\n        <BasicRating\n          conversationID={log.CONVERSATIONID}\n          logID={log.LOGID}\n          defaultValue={log.SCORE}\n        />\n      );\n\n      rowsAux.push(rowAux);\n    });\n  });\n  setRowData(rowsAux);\n}\n\nexport async function getLogs(\n  connectionString,\n  tableName,\n  setConversations,\n  setSuccessOpen,\n  setLoading,\n  callback,\n  param\n) {\n  const response = await api.post(\"/getLogs\", {\n    connStr: connectionString,\n    table: tableName,\n  });\n  console.log(response);\n  if (\n    response.data.conversations &&\n    Object.keys(response.data.conversations).length != 0\n  ) {\n    setSuccessOpen(true);\n    setLoading(false);\n    setConversations(response.data.conversations);\n  } else {\n    callback(param);\n  }\n}\n\nexport function groupByIntent(conversations) {\n  const auxArray = [];\n\n  Object.values(conversations).map((value) => {\n    value.map((obj) => {\n      if (!auxArray.includes(obj.FIRSTINTENT)) auxArray.push(obj.FIRSTINTENT);\n    });\n  });\n\n  return auxArray;\n}\n\nexport async function sendScore(\n  conversations,\n  connectionString,\n  tableName,\n  setConversations\n) {\n  await api.post(\"/updateScore\", {\n    conversation: conversations,\n    connStr: connectionString,\n    table: tableName,\n  });\n\n  let updateRender = [];\n  Object.entries(conversations).map(([key, value]) => {\n    updateRender.push([key, value.filter((obj) => obj.SCORE === null)]);\n  });\n  updateRender = updateRender.filter(([key, value]) => value.length !== 0);\n\n  setConversations(Object.fromEntries(updateRender));\n}\n\nexport async function getCognosSession(username, password) {\n  return await api.post(\"/cognosSession\", {\n    username: username,\n    password: password,\n  });\n}\n\nexport async function sendToCloudant(\n  cloudantApi,\n  cloudantUrl,\n  cloudantDbName,\n  dashboardName,\n  cognosDashboard,\n  setWarningOpen\n) {\n  const response = await api.post(\"/insertDashboard\", {\n    apikey: cloudantApi,\n    url: cloudantUrl,\n    dbName: cloudantDbName,\n    docId: dashboardName,\n    document: cognosDashboard,\n  });\n  if (response.data.Error) {\n    setWarningOpen(true);\n    return response.data;\n  } else {\n    return response.data;\n  }\n}\n\nexport async function getFromCloudant(\n  ID,\n  cloudantApi,\n  cloudantUrl,\n  cloudantDbName,\n  setWarningOpen\n) {\n  const response = await api.post(\"/getDashboard\", {\n    apikey: cloudantApi,\n    url: cloudantUrl,\n    dbName: cloudantDbName,\n    docId: ID,\n  });\n\n  if (response.data.Error) {\n    setWarningOpen(true);\n    return response.data;\n  } else {\n    return response.data;\n  }\n}\n\nexport async function initializeSources(\n  xsd,\n  jdbcUrl,\n  driverClassName,\n  schema,\n  user,\n  password,\n  logsTable,\n  conversationTable,\n  callsTable,\n  contextTable,\n  conversationPathTable,\n  overviewTable,\n  classDistributionTable,\n  precisionAtKTable,\n  classAccuracyTable,\n  pairWiseClassErrorsTable,\n  accuracyVsCoverageTable\n) {\n  const response = await api.post(\"/initializeDashboard\", {\n    xsd: xsd,\n    jdbcUrl: jdbcUrl,\n    driverClassName: driverClassName,\n    schema: schema,\n    user: user,\n    password: password,\n    logsTable: logsTable,\n    conversationTable: conversationTable,\n    callsTable: callsTable,\n    contextTable: contextTable,\n    conversationPathTable: conversationPathTable,\n    overviewTable: overviewTable,\n    classDistributionTable: classDistributionTable,\n    precisionAtKTable: precisionAtKTable,\n    classAccuracyTable: classAccuracyTable,\n    pairWiseClassErrorsTable: pairWiseClassErrorsTable,\n    accuracyVsCoverageTable: accuracyVsCoverageTable,\n  });\n\n  delete response.data._id;\n  delete response.data._rev;\n\n  return response.data;\n}\n\nexport function generateConnectionString(credential) {\n  const credentials = credential.credentials.connection.db2;\n  return `DATABASE=${credentials.database};HOSTNAME=${credentials.hosts[0].hostname};PORT=${credentials.hosts[0].port};PROTOCOL=TCPIP;UID=${credentials.authentication.username};PWD=${credentials.authentication.password};SECURITY=SSL;`;\n}\n\nexport function registerLogin(docId, document) {\n  return new Promise(async (resolve, reject) => {\n    try {\n      resolve(\n        await api.post(\"/registerLogin\", { docId: docId, document: document })\n      );\n    } catch (err) {\n      console.log(err);\n    }\n  });\n}\n","import { useGlobalState } from \"../../hooks/globalState\";\nimport { Modal, TextInput } from \"carbon-components-react\";\nimport { sendToCloudant } from \"../../helpers/helpers\";\nimport textLanguage from \"../../helpers/languagesConfig\";\nimport \"./style.css\";\n\nexport default function SaveModal() {\n  const {\n    language,\n    cloudantApi,\n    cloudantUrl,\n    cloudantDbName,\n    defaultDashboardName,\n    setDefaultDashboardName,\n    cognosDashboard,\n    setUnsavedChanges,\n    setWarningOpen,\n    saveModalOpen,\n    setSaveModalOpen,\n  } = useGlobalState();\n\n  async function handleSubmit() {\n    setWarningOpen(false);\n    const response = await sendToCloudant(\n      cloudantApi,\n      cloudantUrl,\n      cloudantDbName,\n      defaultDashboardName,\n      cognosDashboard,\n      setWarningOpen\n    );\n    if (!response.Error) {\n      setUnsavedChanges(false);\n    }\n    setSaveModalOpen(false);\n  }\n\n  return (\n    <Modal\n      open={saveModalOpen}\n      modalHeading={textLanguage[language].saveModal.heading}\n      modalLabel={textLanguage[language].saveModal.label}\n      primaryButtonText={textLanguage[language].saveModal.primaryText}\n      secondaryButtonText={textLanguage[language].saveModal.secondaryText}\n      onRequestClose={() => {\n        setWarningOpen(false);\n        setSaveModalOpen(false);\n        setDefaultDashboardName(defaultDashboardName);\n      }}\n      onRequestSubmit={handleSubmit}\n      preventCloseOnClickOutside\n    >\n      <TextInput\n        data-modal-primary-focus\n        id=\"text-input-9\"\n        labelText={textLanguage[language].saveModal.inputLabel1}\n        placeholder={defaultDashboardName}\n        style={{ marginBottom: \"1rem\" }}\n        onChange={(e) => {\n          setDefaultDashboardName(e.target.value);\n        }}\n      />\n    </Modal>\n  );\n}\n","import { useGlobalState } from \"../../hooks/globalState\";\nimport { Modal, TextInput } from \"carbon-components-react\";\nimport { getFromCloudant } from \"../../helpers/helpers\";\nimport textLanguage from \"../../helpers/languagesConfig\";\nimport \"./style.css\";\n\nexport default function LoadModal() {\n  const {\n    language,\n    cloudantApi,\n    cloudantUrl,\n    cloudantDbName,\n    defaultDashboardName,\n    setDefaultDashboardName,\n    setWarningOpen,\n    loadModalOpen,\n    setUnsavedChanges,\n    setLoadModalOpen,\n    cognosClient,\n    setCognosDashboard,\n  } = useGlobalState();\n\n  async function loadDashboard(cognosApi, dashboard) {\n    return new Promise((resolve, reject) => {\n      try {\n        cognosApi.initialize().then(() => {\n          cognosApi.dashboard\n            .openDashboard({\n              dashboardSpec: dashboard,\n            })\n            .then(async (dashboardAPI) => {\n              dashboardAPI.setMode(dashboardAPI.MODES.EDIT);\n              setCognosDashboard(await dashboardAPI.getSpec());\n              dashboardAPI.on(dashboardAPI.EVENTS.DIRTY, async () => {\n                setUnsavedChanges(true);\n                const dashSpec = await dashboardAPI.getSpec();\n                setCognosDashboard(dashSpec);\n              });\n              resolve(\"Ok\");\n            });\n        });\n      } catch (err) {\n        reject(\"Bad Credentials/DbName  \");\n      }\n    });\n  }\n\n  async function handleSubmit() {\n    setWarningOpen(false);\n    const dashboardSpec = await getFromCloudant(\n      defaultDashboardName,\n      cloudantApi,\n      cloudantUrl,\n      cloudantDbName,\n      setWarningOpen\n    );\n    if (dashboardSpec.Error) {\n      setLoadModalOpen(false);\n    } else {\n      await loadDashboard(cognosClient, dashboardSpec);\n      setUnsavedChanges(false);\n      setLoadModalOpen(false);\n    }\n  }\n\n  return (\n    <Modal\n      open={loadModalOpen}\n      modalHeading={textLanguage[language].loadModal.heading}\n      modalLabel={textLanguage[language].loadModal.label}\n      primaryButtonText={textLanguage[language].loadModal.primaryText}\n      secondaryButtonText={textLanguage[language].loadModal.secondaryText}\n      onRequestClose={() => {\n        setWarningOpen(false);\n        setLoadModalOpen(false);\n        setDefaultDashboardName(defaultDashboardName);\n      }}\n      onRequestSubmit={handleSubmit}\n      preventCloseOnClickOutside\n    >\n      <TextInput\n        data-modal-primary-focus\n        id=\"text-input-9\"\n        labelText={textLanguage[language].loadModal.inputLabel1}\n        placeholder={defaultDashboardName}\n        style={{ marginBottom: \"1rem\" }}\n        onChange={(e) => {\n          setDefaultDashboardName(e.target.value);\n        }}\n      />\n    </Modal>\n  );\n}\n","import { useGlobalState } from \"../../hooks/globalState\";\nimport { ToastNotification } from \"carbon-components-react\";\nimport textLanguage from \"../../helpers/languagesConfig\";\nimport \"./style.css\";\n\nexport default function WarningModal() {\n  const { language, setWarningOpen, warningOpen } = useGlobalState();\n\n  function handleClose() {\n    setWarningOpen(false);\n  }\n\n  const notificationProps = () => ({\n    kind: \"error\",\n    title: textLanguage[language].modalWarning.heading,\n    subtitle: textLanguage[language].modalWarning.text,\n    caption: textLanguage[language].modalWarning.caption,\n    iconDescription: \"Error\",\n    statusIconDescription: \"Error\",\n    onClose: handleClose,\n    onCloseButtonClick: handleClose,\n    timeout: 4500,\n  });\n\n  return warningOpen ? (\n    <ToastNotification\n      {...notificationProps()}\n      style={{ marginBottom: \".5rem\" }}\n    />\n  ) : (\n    \"\"\n  );\n}\n","import { useGlobalState } from \"../../hooks/globalState\";\nimport { ToastNotification } from \"carbon-components-react\";\nimport textLanguage from \"../../helpers/languagesConfig\";\nimport \"./style.css\";\n\nexport default function StandardDashboardModal() {\n  const { language, setStandardDashboardModal, standardDashboardModal } =\n    useGlobalState();\n\n  function handleClose() {\n    setStandardDashboardModal(false);\n  }\n\n  const notificationProps = () => ({\n    kind: \"warning\",\n    title: textLanguage[language].standardDashboardModal.heading,\n    subtitle: textLanguage[language].standardDashboardModal.text,\n    caption: textLanguage[language].standardDashboardModal.caption,\n    iconDescription: \"Warning\",\n    statusIconDescription: \"Warning\",\n    onClose: handleClose,\n    onCloseButtonClick: handleClose,\n    timeout: 4500,\n  });\n\n  return standardDashboardModal ? (\n    <ToastNotification\n      {...notificationProps()}\n      style={{ marginBottom: \".5rem\" }}\n    />\n  ) : (\n    \"\"\n  );\n}\n","import { useGlobalState } from \"../../hooks/globalState\";\nimport { ToastNotification } from \"carbon-components-react\";\nimport textLanguage from \"../../helpers/languagesConfig\";\nimport \"./style.css\";\n\nexport default function SuccessModal() {\n  const { language, setSuccessOpen, successOpen } = useGlobalState();\n\n  function handleClose() {\n    setSuccessOpen(false);\n  }\n\n  const notificationProps = () => ({\n    kind: \"success\",\n    title: textLanguage[language].modalSuccess.heading,\n    subtitle: textLanguage[language].modalSuccess.text,\n    caption: textLanguage[language].modalSuccess.caption,\n    iconDescription: \"Success\",\n    statusIconDescription: \"Success\",\n    onClose: handleClose,\n    onCloseButtonClick: handleClose,\n    timeout: 4500,\n  });\n\n  return successOpen ? (\n    <ToastNotification\n      {...notificationProps()}\n      style={{ marginBottom: \".5rem\" }}\n    />\n  ) : (\n    \"\"\n  );\n}\n","import React, { useState } from \"react\";\nimport { useGlobalState } from \"../../hooks/globalState\";\nimport Settings20 from \"@carbon/icons-react/lib/settings/20\";\nimport Help20 from \"@carbon/icons-react/lib/help/20\";\nimport { Save20 } from \"@carbon/icons-react\";\nimport {\n  Header,\n  HeaderName,\n  HeaderMenuItem,\n  HeaderNavigation,\n  HeaderGlobalAction,\n  HeaderGlobalBar,\n  HeaderPanel,\n  HeaderMenu,\n  Switcher,\n  SwitcherItem,\n} from \"carbon-components-react/lib/components/UIShell\";\n\nimport textLanguage from \"../../helpers/languagesConfig\";\n\nimport AccountSelectionModal from \"../AccountSelectionModal\";\nimport HelpModal from \"../HelpModal\";\nimport CognosHelpModal from \"../CognosHelpModal\";\n\nimport SaveModal from \"../SaveModal\";\nimport LoadModal from \"../LoadModal\";\n\nimport WarningModal from \"../WarningModal\";\nimport StandardDashboardModal from \"../StandardDashboardModal\";\nimport SuccessModal from \"../SuccessModal\";\n\nimport { switchAccount } from \"../../helpers/apiCalls\";\n\nimport { US, BR, ES } from \"country-flag-icons/react/3x2\";\n\nimport \"./style.css\";\nexport default function HeaderIcc({ modalOpen, helpOpen, renderButton }) {\n  const {\n    language,\n    setLanguage,\n    setSaveModalOpen,\n    setLoadModalOpen,\n    unsavedChanges,\n    history,\n    accounts,\n    account,\n    setAccount,\n    setAccountLoading,\n  } = useGlobalState();\n\n  const languageIcons = { pt: <BR />, es: <ES />, en: <US /> };\n  const [openSidePanel, setOpenSidePanel] = useState(false);\n\n  return (\n    <div id=\"Header\">\n      <Header aria-label=\"IBM Innovation Studio\">\n        <HeaderName\n          prefix=\"IBM Innovation Studio\"\n          onClick={() => history.push(`/dashboard`)}\n        >\n          Assistant Curator\n        </HeaderName>\n        {!history.location.pathname.includes(\"login\") && (\n          <>\n            <HeaderNavigation aria-label=\"IBM [Platform]\">\n              <HeaderMenuItem onClick={() => history.push(`/search`)}>\n                Intent Search\n              </HeaderMenuItem>\n              <HeaderMenuItem onClick={() => history.push(`/cognos`)}>\n                Cognos\n              </HeaderMenuItem>\n            </HeaderNavigation>\n            <HeaderGlobalBar>\n              {renderButton && (\n                <HeaderGlobalAction\n                  aria-label=\"Save\"\n                  onClick={() => {\n                    openSidePanel\n                      ? setOpenSidePanel(false)\n                      : setOpenSidePanel(true);\n                  }}\n                >\n                  {unsavedChanges ? (\n                    <Save20 style={{ fill: \"#4589ff\" }} />\n                  ) : (\n                    <Save20 />\n                  )}\n                </HeaderGlobalAction>\n              )}\n\n              <HeaderMenu menuLinkName={account.entity.name}>\n                {accounts.resources.map((acc) => (\n                  <HeaderMenuItem\n                    id=\"accounts\"\n                    onClick={() => {\n                      switchAccount(acc.metadata.guid).then(() => {\n                        localStorage.setItem(\n                          \"savedAccount\",\n                          JSON.stringify(acc)\n                        );\n                        setAccount(acc);\n                        setAccountLoading(true);\n                        modalOpen(true);\n                      });\n                    }}\n                  >\n                    {acc.entity.name}\n                  </HeaderMenuItem>\n                ))}\n              </HeaderMenu>\n\n              <HeaderMenu menuLinkName={languageIcons[language]}>\n                {Object.entries(languageIcons).map(([key, value]) => (\n                  <HeaderMenuItem\n                    onClick={() => {\n                      setLanguage(key);\n                      localStorage.setItem(\"language\", key);\n                    }}\n                  >\n                    {value}\n                    {` ${key.toUpperCase()}`}\n                  </HeaderMenuItem>\n                ))}\n              </HeaderMenu>\n\n              <HeaderGlobalAction\n                aria-label=\"Settings\"\n                onClick={() => {\n                  modalOpen(true);\n                }}\n              >\n                <Settings20 />\n              </HeaderGlobalAction>\n              <HeaderGlobalAction\n                aria-label=\"Help\"\n                onClick={() => {\n                  helpOpen(true);\n                }}\n              >\n                <Help20 />\n              </HeaderGlobalAction>\n            </HeaderGlobalBar>\n            <HeaderPanel\n              aria-label=\"Header Panel\"\n              expanded={openSidePanel}\n              style={{ height: \"100px\", maxWidth: \"145px\" }}\n            >\n              <Switcher aria-label=\"Switcher Container\">\n                <SwitcherItem\n                  aria-label=\"Save\"\n                  onClick={async () => {\n                    setOpenSidePanel(false);\n                    setSaveModalOpen(true);\n                  }}\n                >\n                  {unsavedChanges\n                    ? textLanguage[language].headerSwitcher.save\n                    : textLanguage[language].headerSwitcher.upToDate}\n                </SwitcherItem>\n                <SwitcherItem\n                  aria-label=\"Load\"\n                  onClick={async () => {\n                    setOpenSidePanel(false);\n                    setLoadModalOpen(true);\n                  }}\n                >\n                  {textLanguage[language].headerSwitcher.load}\n                </SwitcherItem>\n              </Switcher>\n            </HeaderPanel>\n            <AccountSelectionModal modalOpen={modalOpen} />\n            <HelpModal />\n            <CognosHelpModal />\n            <SaveModal />\n            <LoadModal />\n            <WarningModal />\n            <StandardDashboardModal />\n            <SuccessModal />\n          </>\n        )}\n      </Header>\n    </div>\n  );\n}\n","import \"./style.css\";\nimport { useGlobalState } from \"../../hooks/globalState\";\nimport {\n  DataTable,\n  TableContainer,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableRow,\n  TableHeader,\n  TableToolbar,\n  TableToolbarContent,\n  Button,\n} from \"carbon-components-react\";\nimport { sendScore } from \"../../helpers/helpers\";\nimport textLanguage from \"../../helpers/languagesConfig\";\n\nexport default function InfoTable({ ID, rowData }) {\n  const {\n    conversations,\n    setConversations,\n    connectionString,\n    logsTable,\n    language,\n  } = useGlobalState();\n\n  const headerData = [\n    {\n      key: \"LOGID\",\n      header: \"logID\",\n    },\n    {\n      key: \"CLIENTMESSAGE\",\n      header: \"Client Message\",\n    },\n    {\n      key: \"ASSISTANTMESSAGE\",\n      header: \"Assistant Message\",\n    },\n    {\n      key: \"FIRSTINTENT\",\n      header: \"Intent identified\",\n    },\n    {\n      key: \"SCORE\",\n      header: \"Score (1 - 5)\",\n    },\n  ];\n\n  const filtered = rowData.filter((value) => {\n    return value.CONVERSATIONID === ID || value.FIRSTINTENT === ID;\n  });\n\n  return (\n    <DataTable\n      rows={filtered}\n      headers={headerData}\n      useZebraStyles\n      stickyHeader\n      size=\"compact\"\n    >\n      {({\n        rows,\n        headers,\n        getHeaderProps,\n        getTableProps,\n        getTableContainerProps,\n      }) => (\n        <TableContainer\n          title={`${textLanguage[language].infoTable.group}: ${\n            ID === \"\" ? \"-\" : ID\n          }`}\n          {...getTableContainerProps()}\n        >\n          <TableToolbar>\n            <TableToolbarContent>\n              <Button\n                onClick={() => {\n                  sendScore(\n                    conversations,\n                    connectionString,\n                    logsTable,\n                    setConversations\n                  );\n                }}\n              >\n                {textLanguage[language].infoTable.sendButton}\n              </Button>\n            </TableToolbarContent>\n          </TableToolbar>\n          <Table {...getTableProps()}>\n            <TableHead>\n              <TableRow>\n                {headers.map((header) => (\n                  <TableHeader {...getHeaderProps({ header })}>\n                    {header.header}\n                  </TableHeader>\n                ))}\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {rows.map((row) => (\n                <TableRow key={row.id}>\n                  {row.cells.map((cell) => (\n                    <TableCell key={cell.id}>{cell.value}</TableCell>\n                  ))}\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </TableContainer>\n      )}\n    </DataTable>\n  );\n}\n","import { useGlobalState } from \"../../hooks/globalState\";\nimport { Tabs, Tab } from \"carbon-components-react\";\nimport InfoTable from \"../InfoTable\";\n\nexport default function BasicTabs() {\n  const { conversations, rowData } = useGlobalState();\n\n  return (\n    <Tabs scrollIntoView type=\"container\">\n      {Object.keys(conversations).map((conversationID) => (\n        <Tab id={conversationID} label={conversationID}>\n          <InfoTable ID={conversationID} rowData={rowData} />\n        </Tab>\n      ))}\n    </Tabs>\n  );\n}\n","import { useEffect, useState } from \"react\";\nimport { useGlobalState } from \"../../hooks/globalState\";\nimport {\n  Modal,\n  TextInput,\n  Select,\n  SelectItem,\n  Loading,\n} from \"carbon-components-react\";\nimport { getLogs, generateConnectionString } from \"../../helpers/helpers\";\nimport textLanguage from \"../../helpers/languagesConfig\";\n\nimport { getResourceKeys } from \"../../helpers/apiCalls\";\n\nimport \"./style.css\";\n\nexport default function ConfigModal() {\n  const {\n    language,\n    configOpen,\n    setLoading,\n    setConfigOpen,\n    setWarningOpen,\n    setSuccessOpen,\n    setConnectionString,\n    logsTable,\n    setLogsTable,\n    setConversations,\n    resources,\n    accountLoading,\n  } = useGlobalState();\n\n  const [selectedInstance, setSelectedInstance] = useState(null);\n\n  const [selectedCredential, setSelectedCredential] = useState(null);\n\n  useEffect(() => {\n    setSelectedInstance(resources.db2.body.resources[0]);\n  }, [resources]);\n\n  useEffect(async () => {\n    const resourceKeys = await getResourceKeys(selectedInstance.guid);\n    setSelectedCredential(resourceKeys.resources[0]);\n  }, [selectedInstance]);\n\n  async function handleSubmit() {\n    setWarningOpen(false);\n    setSuccessOpen(false);\n    setConfigOpen(false);\n    setLoading(true);\n\n    const connStr = await generateConnectionString(selectedCredential);\n    setConnectionString(connStr);\n    await getLogs(\n      connStr,\n      logsTable,\n      setConversations,\n      setSuccessOpen,\n      setLoading,\n      noConnection,\n      \"\"\n    );\n  }\n\n  function noConnection() {\n    setConversations({});\n    setWarningOpen(true);\n    setLoading(false);\n  }\n\n  return !accountLoading ? (\n    <Modal\n      open={configOpen}\n      modalHeading={textLanguage[language].modal.heading}\n      modalLabel={textLanguage[language].modal.label}\n      primaryButtonText={textLanguage[language].modal.primaryText}\n      secondaryButtonText={textLanguage[language].modal.secondaryText}\n      onRequestClose={() => {\n        setConfigOpen(false);\n      }}\n      onRequestSubmit={handleSubmit}\n      preventCloseOnClickOutside\n    >\n      <Select\n        id=\"select-1\"\n        invalidText=\"A valid value is required\"\n        labelText={textLanguage[language].modal.inputLabel1}\n        onChange={(e) => {\n          if (e.target.value === \"placeholder\")\n            alert(textLanguage[language].modal.alert);\n          else setSelectedInstance(JSON.parse(e.target.value));\n        }}\n      >\n        <SelectItem\n          text={textLanguage[language].modal.selectAnOption}\n          value=\"placeholder\"\n        />\n        {resources.db2.body.resources.map((resource) => (\n          <SelectItem text={resource.name} value={JSON.stringify(resource)} />\n        ))}\n      </Select>\n\n      <TextInput\n        data-modal-primary-focus\n        id=\"text-input-2\"\n        labelText={textLanguage[language].modal.inputLabel2}\n        placeholder={logsTable}\n        style={{ marginBottom: \"1rem\" }}\n        onChange={(e) => {\n          setLogsTable(e.target.value.toUpperCase());\n        }}\n      />\n    </Modal>\n  ) : (\n    <Loading />\n  );\n}\n","import React, { useEffect } from \"react\";\nimport \"carbon-components/css/carbon-components.min.css\";\nimport Header from \"../../components/Header\";\nimport BasicTabs from \"../../components/Tabs\";\nimport { useGlobalState } from \"../../hooks/globalState\";\nimport { createRows, getLogs } from \"../../helpers/helpers\";\nimport { TabsSkeleton, DataTableSkeleton } from \"carbon-components-react\";\n\nimport ConfigModal from \"../../components/ConfigModal\";\n\nimport \"./style.css\";\n\nexport default function Dashboard() {\n  const {\n    history,\n    account,\n    setLanguage,\n    setLoading,\n    loading,\n    setHelpOpen,\n    setConfigOpen,\n    setSuccessOpen,\n    setWarningOpen,\n    setRowData,\n    conversations,\n    setConversations,\n    connectionString,\n    logsTable,\n    setCognosSession,\n    setAccountModalOpen,\n  } = useGlobalState();\n\n  useEffect(() => {\n    if (account.entity.name === \"\") history.push(\"/login\");\n  }, []);\n\n  useEffect(async () => {\n    const storedLanguage = localStorage.getItem(\"language\");\n    if (storedLanguage) setLanguage(storedLanguage);\n\n    setSuccessOpen(false);\n    setWarningOpen(false);\n    setCognosSession(null);\n\n    if (conversations.length === 0)\n      await getLogs(\n        connectionString,\n        logsTable,\n        setConversations,\n        setSuccessOpen,\n        setLoading,\n        setAccountModalOpen,\n        true\n      );\n  }, []);\n\n  useEffect(() => {\n    createRows(conversations, setRowData);\n  }, [conversations]);\n\n  return (\n    <div id=\"content\">\n      <Header modalOpen={setConfigOpen} helpOpen={setHelpOpen} />\n      <ConfigModal />\n      {loading ? (\n        <>\n          <TabsSkeleton type=\"container\" />\n          <DataTableSkeleton />\n        </>\n      ) : (\n        <BasicTabs />\n      )}\n    </div>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport \"carbon-components/css/carbon-components.min.css\";\nimport Header from \"../../components/Header\";\nimport { useGlobalState } from \"../../hooks/globalState\";\n\nimport {\n  Accordion,\n  AccordionItem,\n  AccordionSkeleton,\n  Search,\n} from \"carbon-components-react\";\nimport InfoTable from \"../../components/InfoTable\";\nimport { getLogs, groupByIntent, createRows } from \"../../helpers/helpers\";\n\nimport ConfigModal from \"../../components/ConfigModal\";\n\nimport \"./style.css\";\n\nexport default function SearchPage() {\n  const {\n    account,\n    history,\n    setLanguage,\n    loading,\n    setLoading,\n    setHelpOpen,\n    setConfigOpen,\n    setSuccessOpen,\n    setWarningOpen,\n    conversations,\n    rowData,\n    setRowData,\n    setConversations,\n    connectionString,\n    logsTable,\n    setCognosSession,\n  } = useGlobalState();\n\n  const [intentGroups, setIntentGroups] = useState([]);\n  const [searchValue, setSearchValue] = useState(\"\");\n\n  useEffect(() => {\n    if (account.entity.name === \"\") history.push(\"/login\");\n  }, []);\n\n  useEffect(async () => {\n    const storedLanguage = localStorage.getItem(\"language\");\n    if (storedLanguage) setLanguage(storedLanguage);\n\n    setSuccessOpen(false);\n    setWarningOpen(false);\n    setCognosSession(null);\n\n    if (conversations.length === 0)\n      await getLogs(\n        connectionString,\n        logsTable,\n        setConversations,\n        setSuccessOpen,\n        setLoading,\n        setConfigOpen,\n        true\n      );\n  }, []);\n\n  useEffect(() => {\n    setIntentGroups(groupByIntent(conversations).sort());\n    createRows(conversations, setRowData);\n  }, [conversations]);\n\n  const props = () => ({\n    className: \"some-class\",\n    size: \"xl\",\n    light: false,\n    disabled: false,\n    defaultValue: \"\",\n    labelText: \"Search\",\n    placeholder: \"Search\",\n  });\n\n  return (\n    <div id=\"content\">\n      <Header modalOpen={setConfigOpen} helpOpen={setHelpOpen} />\n      <ConfigModal />\n      <Search\n        {...props()}\n        id=\"searchBar\"\n        onChange={(e) => {\n          setSearchValue(e.target.value);\n        }}\n      />\n      {loading ? (\n        <AccordionSkeleton />\n      ) : (\n        <div id=\"accords\">\n          <Accordion>\n            {intentGroups.map((intent) =>\n              intent\n                .toLowerCase()\n                .replace(/\\s/g, \"\")\n                .includes(searchValue.toLowerCase().replace(/\\s/g, \"\")) ? (\n                <AccordionItem title={intent === \"\" ? \"-\" : intent}>\n                  <InfoTable ID={intent} rowData={rowData} />\n                </AccordionItem>\n              ) : (\n                \"\"\n              )\n            )}\n          </Accordion>\n        </div>\n      )}\n    </div>\n  );\n}\n","(\"use strict\");\n\nvar _typeof =\n  typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\"\n    ? function (obj) {\n        return typeof obj;\n      }\n    : function (obj) {\n        return obj &&\n          typeof Symbol === \"function\" &&\n          obj.constructor === Symbol &&\n          obj !== Symbol.prototype\n          ? \"symbol\"\n          : typeof obj;\n      };\n\nvar _createClass = (function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n})();\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nvar INIT_TIMEOUT = 30000;\n\nvar CognosApi = (function () {\n  function CognosApi(options) {\n    _classCallCheck(this, CognosApi);\n\n    if (!options || !options.node) {\n      throw new Error(\n        \"Invalid options parameter passed into the constructor. Must provide both options.node and options.cognosRootURL in the options parameter.\"\n      );\n    }\n\n    this._node = options.node;\n    this._cognosURL = options.cognosRootURL;\n    this._testURL = options.testURL;\n    this._sessionCode = options.sessionCode;\n    this._initTimeout = options.initTimeout || INIT_TIMEOUT;\n\n    this._apiKey = CognosApi._createUID(\"capi\");\n    this._pendingRequests = {};\n    this._eventCallbacks = {};\n    this._eventReverseLookup = {};\n\n    if (options.language && typeof options.language === \"string\") {\n      var language = options.language.toLowerCase();\n      if (CognosApi.SUPPORTED_LANGUAGES[language]) {\n        this._language = language;\n      } else {\n        throw new Error(\"Unsupported language: \" + language);\n      }\n    } else {\n      this._language = \"en\";\n    }\n\n    // regular expression validate the incoming message header\n    this._message_regex = new RegExp(\n      \"#capi#(.+)#\" + this._apiKey + \"#(.*)$\",\n      \"g\"\n    );\n\n    /**\n     * Allows the caller to update the module definitions inside the dashboard specification\n     * @memberof CognosApi\n     * @function CognosApi#updateModuleDefinitions\n     * @param {String} dashboardSpec The dashboard specification\n     * @param {Function} callback A callback method which will be called with an array of module IDs.  This callback should return an array of objects containing the module ID (id) and the new module definition (module).\n     * @return {Promise} Promise that gets resolved with the updated dashboard specification\n     * @example\n     * const cognosApi = new CognosApi({\n     * \tcognosRootURL: 'http://localhost/bi/',\n     * \tnode: document.getElementById('containerDivId'),\n     *\tsessionCode: 'CD1a2b34567b8c901234d5',\n     *\tlanguage: 'en'\n     * });\n     *\n     * cognosApi.initialize().then(() => {\n     * \tconsole.log(cognosApi.dashboard);\n     * });\n     *\n     * cognosApi.updateModuleDefinitions(oldDashboardSpec, (moduleIds) => {\n     * \t// Implement the callback that returns an array of the new module definitions.\n     * \t// The array of module definitions corresponds to the array of moduleIds\n     * \treturn Promise.resolve(newModules);\n     * }).then((newDashboardSpec) => {\n     *\tconsole.log(newDashboardSpec);\n     * });\n     */\n    this.updateModuleDefinitions =\n      CognosApi._updateModuleDefinitions.bind(this);\n  }\n\n  _createClass(\n    CognosApi,\n    [\n      {\n        key: \"initialize\",\n        value: function initialize() {\n          var _this = this;\n\n          if (!this._readyPromise) {\n            this._readyPromise = new Promise(function (resolve, reject) {\n              // setup the initialize timeout\n              // var timeout = setTimeout(\n              //   _this._onInitTimeout.bind(_this, reject),\n              //   _this._initTimeout\n              // );\n\n              // create the API service container\n              _this._initializeContainer();\n              // initialize the API service\n              _this._initializeService().then(function () {\n                // clear the init timeout\n                // clearTimeout(timeout);\n\n                // wait for the APIs to be initialized\n                _this._sendMessage(\n                  {\n                    apiId: _this._apiKey,\n                    actionId: CognosApi._createUID(CognosApi.APISERVICE_INIT),\n                    name: CognosApi.APISERVICE_INIT,\n                  },\n                  resolve,\n                  reject\n                );\n              });\n            });\n          }\n          return this._readyPromise;\n        },\n\n        /**\n         * Attach an {@link CognosApi#EVENTS event} handler function for the root CognosApi\n         * @memberof CognosApi\n         * @function CognosApi#on\n         * @param {string} eventName - name of the event\n         * @callback cb - event handler callback\n         */\n      },\n      {\n        key: \"on\",\n        value: function on(eventName, cb) {\n          if (!this._eventReverseLookup[cb]) {\n            this._sendMessage(\n              {\n                apiId: this._apiKey,\n                actionId: CognosApi._createUID(CognosApi.APISERVICE_ON),\n                name: CognosApi.APISERVICE_ON,\n                parameters: Array.prototype.slice.call(arguments),\n              },\n              cb\n            );\n          }\n        },\n\n        /**\n         * Dettach an {@link CognosApi#EVENTS event} handler function for the root CognosApi\n         * @memberof CognosApi\n         * @function CognosApi#on\n         * @param {string} eventName - name of the event\n         * @callback cb - event handler callback\n         */\n      },\n      {\n        key: \"off\",\n        value: function off(eventName, cb) {\n          if (this._eventReverseLookup[cb]) {\n            this._sendMessage(\n              {\n                apiId: this._apiKey,\n                actionId: this._eventReverseLookup[cb],\n                name: CognosApi.APISERVICE_OFF,\n                parameters: Array.prototype.slice.call(arguments),\n              },\n              cb\n            );\n          }\n        },\n\n        /**\n         * initialization timeout handler\n         * @private\n         */\n      },\n      // {\n      //   key: \"_onInitTimeout\",\n      //   value: function _onInitTimeout(reject) {\n      //     this._cleanupContainer();\n      //     reject(\n      //       new Error(\"Initialization timeout. \" + this._initTimeout + \"ms\")\n      //     );\n      //   },\n\n      //   /**\n      //    * Initialize the CAPI service container\n      //    * @private\n      //    */\n      // },\n      {\n        key: \"_initializeContainer\",\n        value: function _initializeContainer() {\n          var container = document.createElement(\"iframe\");\n\n          container.src = this._buildSourceUrl();\n          container.setAttribute(\"class\", CognosApi.APISERVICE_CLASS);\n          container.setAttribute(\"style\", \"height:100%; width:100%;\");\n          container.setAttribute(\"frameBorder\", \"0\");\n\n          // append the container to the root node\n          this._node.innerHTML = \"\";\n          this._node.appendChild(container);\n\n          // keep the iframe contentWindow as the messaging target\n          this._target = container.contentWindow;\n          this._targetOrigin = (/(https*:\\/\\/[^\\/]+)/.exec(this._cognosURL) || [\n            window.location.origin,\n          ])[0]; // eslint-disable-line\n        },\n\n        /**\n         * Closes the CognosApi client.\n         * @memberof CognosApi\n         * @function CognosApi#close\n         * @return {Promise} Promise that gets resolved with a Api instance is successfully closed\n         * @example\n         * const cognosApi = new CognosApi({\n         * \tcognosRootURL: 'http://localhost/bi/',\n         * \tnode: document.getElementById('containerDivId'),\n         *\tsessionCode: 'CD1a2b34567b8c901234d5',\n         *\tlanguage: 'en'\n         * });\n         * ...\n         * cognosApi.close();\n         */\n      },\n      {\n        key: \"close\",\n        value: function close() {\n          var _this2 = this;\n\n          return new Promise(function (resolve, reject) {\n            _this2._destroyService().then(\n              function (obj) {\n                // remove all injected apis\n                _this2._cleanupApiService();\n                // clean up the container node\n                _this2._cleanupContainer();\n                resolve(obj);\n              },\n              function (err) {\n                reject(err);\n              }\n            );\n          });\n        },\n      },\n      {\n        key: \"_buildSourceUrl\",\n        value: function _buildSourceUrl() {\n          if (this._testURL) {\n            return this._testURL;\n          } else {\n            var root =\n              this._cognosURL +\n              (this._cognosURL.indexOf(\"?\") === -1 ? \"?\" : \"&\");\n            var params = {\n              perspective: \"postMessageApiLoader\",\n              apiKey: this._apiKey,\n              parentOrigin: window.location.origin,\n              sessionCode: this._sessionCode,\n              contentLanguage: this._language,\n            };\n            return (\n              root +\n              Object.keys(params)\n                .map(function (k) {\n                  return (\n                    encodeURIComponent(k) + \"=\" + encodeURIComponent(params[k])\n                  );\n                })\n                .join(\"&\")\n            );\n          }\n        },\n\n        /**\n         * Clean up the injected apis\n         * @private\n         */\n      },\n      {\n        key: \"_cleanupApiService\",\n        value: function _cleanupApiService() {\n          var _this3 = this;\n\n          // remove the message handler\n          if (this._messageHandler) {\n            window.removeEventListener(\"message\", this._messageHandler, false);\n          }\n\n          // clean up all apis\n          Object.keys(this).forEach(function (memberName) {\n            if (\n              memberName.indexOf(\"_\") !== 0 &&\n              _typeof(_this3[memberName]) === \"object\" &&\n              _this3[memberName].apiId\n            ) {\n              delete _this3[memberName];\n            }\n          });\n\n          this._pendingRequests = {};\n          this._eventCallbacks = {};\n          this._eventReverseLookup = {};\n          this._messageHandler = null;\n          this.apiId = null;\n        },\n\n        /**\n         * Clean up the iframe container\n         * @private\n         */\n      },\n      {\n        key: \"_cleanupContainer\",\n        value: function _cleanupContainer() {\n          if (this._node) {\n            var iframes =\n              this._node.getElementsByClassName(CognosApi.APISERVICE_CLASS) ||\n              [];\n            if (iframes.length === 1) {\n              this._node.removeChild(iframes[0]);\n            }\n          }\n\n          this._readyPromise = null;\n          this._targetOrigin = null;\n          this._target = null;\n        },\n\n        /**\n         * Wait for the CognosApi service to initialize\n         * @private\n         * @return {Promise} Promise that gets resolved when the CognosApi service initialization is complete\n         */\n      },\n      {\n        key: \"_initializeService\",\n        value: function _initializeService() {\n          var _this4 = this;\n\n          this._messageHandler = this._receiveMessage.bind(this);\n          window.addEventListener(\"message\", this._messageHandler, false);\n\n          return new Promise(function (resolve, reject) {\n            _this4._registerResponseCallbacks(_this4._apiKey, resolve, reject);\n          });\n        },\n\n        /**\n         * Make a request to destroy the service\n         * @private\n         * @return {Promise} Promise that gets resolved when the service finishes terminate\n         */\n      },\n      {\n        key: \"_destroyService\",\n        value: function _destroyService() {\n          var _this5 = this;\n\n          return new Promise(function (resolve, reject) {\n            _this5._sendMessage(\n              {\n                apiId: _this5._apiKey,\n                actionId: CognosApi._createUID(CognosApi.APISERVICE_DESTROY),\n                name: CognosApi.APISERVICE_DESTROY,\n              },\n              resolve,\n              reject\n            );\n          });\n        },\n\n        /**\n         * Register the Promise callbacks that are created for each postMessage requests\n         * @private\n         * @param {string} identifier that uniquely identifies a single postMessage request\n         * @param {function} callback function to be used when the postMessage response comes back successfully\n         * @param {function} callback function to be used when the postMessage response comes back as a failure\n         */\n      },\n      {\n        key: \"_registerResponseCallbacks\",\n        value: function _registerResponseCallbacks(id, success, fail) {\n          if (id && success) {\n            this._pendingRequests[id] = {\n              success: success,\n              fail: fail,\n            };\n          }\n        },\n\n        /**\n         * Invoke the resolve callback for the request that has returned successfully\n         * @private\n         * @param {string} identifier that uniquely identifies a single postMessage request\n         * @param {any} the resolved value\n         */\n      },\n      {\n        key: \"_resolveResponseCallbacks\",\n        value: function _resolveResponseCallbacks(id, obj) {\n          if (id && this._pendingRequests[id]) {\n            this._pendingRequests[id].success(obj);\n            delete this._pendingRequests[id];\n          }\n        },\n\n        /**\n         * Invoke the reject callback for the request that has returned as a failure\n         * @private\n         * @param {string} identifier that uniquely identifies a single postMessage request\n         * @param {object} the error object\n         */\n      },\n      {\n        key: \"_rejectResponseCallbacks\",\n        value: function _rejectResponseCallbacks(id, obj) {\n          if (id && this._pendingRequests[id]) {\n            this._pendingRequests[id].fail(obj);\n            delete this._pendingRequests[id];\n          }\n        },\n\n        /**\n         * Register an event callback\n         * @private\n         */\n      },\n      {\n        key: \"_registerEventCallbacks\",\n        value: function _registerEventCallbacks(id, callback) {\n          if (id && callback) {\n            this._eventCallbacks[id] = callback;\n            this._eventReverseLookup[callback] = id;\n          }\n        },\n\n        /**\n         * Unregister an event callback\n         * @private\n         */\n      },\n      {\n        key: \"_unregisterEventCallbacks\",\n        value: function _unregisterEventCallbacks(id, callback) {\n          if (id && callback && this._eventReverseLookup[callback] === id) {\n            delete this._eventCallbacks[id];\n            delete this._eventReverseLookup[callback];\n          }\n        },\n\n        /**\n         * Handle event by invoking the corresponding callback\n         * @private\n         */\n      },\n      {\n        key: \"_handleEventCallbacks\",\n        value: function _handleEventCallbacks(id, obj) {\n          if (id && typeof this._eventCallbacks[id] === \"function\") {\n            this._eventCallbacks[id].call(this._eventCallbacks[id], obj);\n          }\n        },\n\n        /**\n         * Invoke a postMessage to the target window.\n         * Callbacks are registered which gets invoked when the corresponding response is returned\n         * @private\n         * @param {object} Payload object to be post to the target window\n         * @param {function} Resolve callback function\n         * @param {function} Reject callback function\n         */\n      },\n      {\n        key: \"_sendMessage\",\n        value: function _sendMessage(obj, success, fail) {\n          if (this._target) {\n            if (obj.name === \"on\") {\n              this._registerEventCallbacks(obj.actionId, success);\n            } else if (obj.name === \"off\") {\n              this._unregisterEventCallbacks(obj.actionId, success);\n            } else {\n              this._registerResponseCallbacks(obj.actionId, success, fail);\n            }\n            this._target.postMessage(\n              this._createMessage(obj),\n              this._targetOrigin\n            );\n          }\n        },\n\n        /**\n         * Message event handler to handle messages posted by the inner iframe\n         * @private\n         * @param {object} Event object\n         */\n      },\n      {\n        key: \"_receiveMessage\",\n        value: function _receiveMessage(event) {\n          // Only accept message from the iframe we know about\n          if (event.origin !== this._targetOrigin) {\n            return;\n          }\n          var obj = this._parseMessage(event.data);\n          if (obj !== null) {\n            if (!obj.status || obj.status === \"success\") {\n              switch (obj.type) {\n                case \"ready\":\n                  this._resolveResponseCallbacks(this._apiKey);\n                  break;\n                case \"api\":\n                  // eslint-disable-line\n                  // expand the api response by either injecting to the API to the root or creating an new API object\n                  var resolvedAPI =\n                    obj.actionId.indexOf(CognosApi.APISERVICE_INIT) === 0\n                      ? this\n                      : {};\n                  this._injectAPI(resolvedAPI, obj.payload);\n                  this._resolveResponseCallbacks(obj.actionId, resolvedAPI);\n                  break;\n                case \"event\":\n                  this._handleEventCallbacks(obj.actionId, obj.payload);\n                  break;\n                default:\n                  // simply resolve with the raw payload\n                  this._resolveResponseCallbacks(obj.actionId, obj.payload);\n              }\n            } else {\n              this._rejectResponseCallbacks(obj.actionId, obj.payload);\n            }\n          }\n        },\n\n        /**\n         * Create a message with the CAPI header prepended to the message\n         * @private\n         * @param {object} Payload object\n         */\n      },\n      {\n        key: \"_createMessage\",\n        value: function _createMessage(obj) {\n          return (\n            CognosApi.APIHEADER +\n            CognosApi.APIHEADER_DELIMITER +\n            this._apiKey +\n            CognosApi.APIHEADER_DELIMITER +\n            JSON.stringify(obj)\n          );\n        },\n\n        /**\n         * Parse the response message.\n         * @private\n         * @return Response payload object\n         */\n      },\n      {\n        key: \"_parseMessage\",\n        value: function _parseMessage(data) {\n          var result = this._message_regex.exec(data);\n          if (\n            (typeof result === \"undefined\" ? \"undefined\" : _typeof(result)) ===\n              \"object\" &&\n            result !== null\n          ) {\n            this._message_regex.lastIndex = 0;\n            return JSON.parse(result[2]);\n          }\n          return null;\n        },\n\n        /**\n         * Inject the API spec returned by the API service to the client API object\n         * @private\n         * @param {object} client API object\n         * @param {object} API spec that describes an API\n         */\n      },\n      {\n        key: \"_injectAPI\",\n        value: function _injectAPI(api, apiSpec) {\n          var _this6 = this;\n\n          Object.keys(apiSpec).forEach(function (memberName) {\n            if (memberName === \"apiId\") {\n              api[memberName] = apiSpec[memberName];\n            } else if (apiSpec[memberName].apiId) {\n              // new nested API needs to built recursively\n              api[memberName] = {};\n              _this6._injectAPI(api[memberName], apiSpec[memberName]);\n            } else {\n              if (apiSpec[memberName].type === \"enum\") {\n                api[memberName] = apiSpec[memberName].values;\n              } else if (apiSpec[memberName].type === \"method\") {\n                api[memberName] = _this6._getAPIMethod(\n                  memberName,\n                  apiSpec.apiId\n                );\n              }\n            }\n          });\n        },\n\n        /**\n         * Generate an API proxy method to be injected to the client API object\n         * @private\n         * @param {string} Method name\n         * @param {string} Identifier of the API\n         */\n      },\n      {\n        key: \"_getAPIMethod\",\n        value: function _getAPIMethod(methodName, apiId) {\n          var _this7 = this;\n\n          // predefined event on/off methods\n          if (methodName === \"on\") {\n            return function () {\n              for (\n                var _len = arguments.length, args = Array(_len), _key = 0;\n                _key < _len;\n                _key++\n              ) {\n                args[_key] = arguments[_key];\n              }\n\n              var params = Array.prototype.slice.call(args);\n              var callback = params[1];\n              _this7._sendMessage(\n                {\n                  apiId: apiId,\n                  actionId: CognosApi._createUID(methodName),\n                  name: methodName,\n                  parameters: params,\n                },\n                callback,\n                callback\n              );\n            };\n          } else if (methodName === \"off\") {\n            return function () {\n              for (\n                var _len2 = arguments.length, args = Array(_len2), _key2 = 0;\n                _key2 < _len2;\n                _key2++\n              ) {\n                args[_key2] = arguments[_key2];\n              }\n\n              var params = Array.prototype.slice.call(args);\n              var callback = params[1];\n              _this7._sendMessage(\n                {\n                  apiId: apiId,\n                  actionId: _this7._eventReverseLookup[callback],\n                  name: methodName,\n                  parameters: params,\n                },\n                callback,\n                callback\n              );\n            };\n          }\n\n          // general api methods\n          return function () {\n            for (\n              var _len3 = arguments.length, args = Array(_len3), _key3 = 0;\n              _key3 < _len3;\n              _key3++\n            ) {\n              args[_key3] = arguments[_key3];\n            }\n\n            var params = Array.prototype.slice.call(args);\n            return new Promise(function (resolve, reject) {\n              _this7._sendMessage(\n                {\n                  apiId: apiId,\n                  actionId: CognosApi._createUID(methodName),\n                  name: methodName,\n                  parameters: params,\n                },\n                resolve,\n                reject\n              );\n            });\n          };\n        },\n\n        /**\n         * Static private method to to update the modules in the dashboard spec.\n         * @static\n         * @private\n         */\n      },\n    ],\n    [\n      {\n        key: \"_updateModuleDefinitions\",\n        value: function _updateModuleDefinitions(dashboardSpec, callback) {\n          if (\n            !dashboardSpec ||\n            !dashboardSpec.dataSources ||\n            !dashboardSpec.dataSources.sources\n          ) {\n            return Promise.resolve(dashboardSpec);\n          }\n\n          var moduleClientIds = [];\n          dashboardSpec.dataSources.sources.forEach(function (source) {\n            if (source.clientId) {\n              moduleClientIds.push(source.clientId);\n            }\n          });\n\n          if (moduleClientIds.length === 0) {\n            return Promise.resolve(dashboardSpec);\n          }\n\n          var result = callback(moduleClientIds);\n          if (result && typeof result.then === \"function\") {\n            return result.then(function (newModules) {\n              return CognosApi._doModuleUpdate(dashboardSpec, newModules);\n            });\n          }\n\n          return Promise.resolve(\n            CognosApi._doModuleUpdate(dashboardSpec, result)\n          );\n        },\n\n        /**\n         * Static private method to to update the modules in the dashboard spec.\n         * @static\n         * @private\n         */\n      },\n      {\n        key: \"_doModuleUpdate\",\n        value: function _doModuleUpdate(dashboardSpec, newModules) {\n          var cloneDashboardSpec = JSON.parse(JSON.stringify(dashboardSpec));\n          if (newModules) {\n            var _iteratorNormalCompletion = true;\n            var _didIteratorError = false;\n            var _iteratorError = undefined;\n\n            try {\n              for (\n                var _iterator =\n                    cloneDashboardSpec.dataSources.sources[Symbol.iterator](),\n                  _step;\n                !(_iteratorNormalCompletion = (_step = _iterator.next()).done);\n                _iteratorNormalCompletion = true\n              ) {\n                var source = _step.value;\n                var _iteratorNormalCompletion2 = true;\n                var _didIteratorError2 = false;\n                var _iteratorError2 = undefined;\n\n                try {\n                  for (\n                    var _iterator2 = newModules[Symbol.iterator](), _step2;\n                    !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next())\n                      .done);\n                    _iteratorNormalCompletion2 = true\n                  ) {\n                    var newModule = _step2.value;\n\n                    if (newModule.id === source.clientId) {\n                      if (newModule.module) {\n                        source.module = newModule.module;\n                      }\n                      if (newModule.name) {\n                        source.name = newModule.name;\n                      }\n                      if (newModule.newId && newModule.id !== newModule.newId) {\n                        source.clientId = newModule.newId;\n                      }\n                    }\n                  }\n                } catch (err) {\n                  _didIteratorError2 = true;\n                  _iteratorError2 = err;\n                } finally {\n                  try {\n                    if (!_iteratorNormalCompletion2 && _iterator2.return) {\n                      _iterator2.return();\n                    }\n                  } finally {\n                    if (_didIteratorError2) {\n                      throw _iteratorError2;\n                    }\n                  }\n                }\n              }\n            } catch (err) {\n              _didIteratorError = true;\n              _iteratorError = err;\n            } finally {\n              try {\n                if (!_iteratorNormalCompletion && _iterator.return) {\n                  _iterator.return();\n                }\n              } finally {\n                if (_didIteratorError) {\n                  throw _iteratorError;\n                }\n              }\n            }\n          }\n\n          return cloneDashboardSpec;\n        },\n\n        /**\n         * Static private method to create an unique identifier prepended with a give name\n         * @static\n         * @private\n         */\n      },\n      {\n        key: \"_createUID\",\n        value: function _createUID(prepend) {\n          var uid = Date.now().valueOf();\n          CognosApi.__uid = CognosApi.__uid === uid ? uid + 1 : uid;\n          return prepend + \"_\" + CognosApi.__uid.toString(16);\n        },\n      },\n    ]\n  );\n\n  return CognosApi;\n})();\n\nCognosApi.EVENTS = {\n  /** Request error events.<br>\n Allows users to receive HTTP request error events. */\n  REQUEST_ERROR: \"api:error:request\",\n};\n\n/**\n * Constant for Api message header and initialization\n * @private\n */\nCognosApi.APIHEADER_DELIMITER = \"#\";\nCognosApi.APIHEADER_MARKER = \"capi\";\nCognosApi.APIHEADER_VERSION = \"v1\";\nCognosApi.APIHEADER =\n  CognosApi.APIHEADER_DELIMITER +\n  CognosApi.APIHEADER_MARKER +\n  CognosApi.APIHEADER_DELIMITER +\n  CognosApi.APIHEADER_VERSION;\n\nCognosApi.APISERVICE_INIT = \"getAppApi\";\nCognosApi.APISERVICE_ON = \"on\";\nCognosApi.APISERVICE_OFF = \"off\";\nCognosApi.APISERVICE_DESTROY = \"destroyAppApi\";\nCognosApi.APISERVICE_CLASS = \"capi-service\";\n\nCognosApi.SUPPORTED_LANGUAGES = Object.freeze({\n  cs: \"Czech\",\n  da: \"Danish\",\n  de: \"German\",\n  en: \"English\",\n  es: \"Spanish\",\n  fi: \"Finnish\",\n  fr: \"French\",\n  hr: \"Croatian\",\n  hu: \"Hungarian\",\n  it: \"Italian\",\n  ja: \"Japanese\",\n  kk: \"Kazakh\",\n  ko: \"Korean\",\n  nb: \"Norwegian Bokmål\",\n  nl: \"Dutch\",\n  no: \"Norwegian\",\n  pl: \"Polish\",\n  pt: \"Portuguese\",\n  \"pt-br\": \"Portuguese (Brazil)\",\n  ro: \"Romanian\",\n  ru: \"Russian\",\n  sl: \"Slovenian\",\n  sv: \"Swedish\",\n  th: \"Thai\",\n  tr: \"Turkish\",\n  zh: \"Chinese\",\n  \"zh-cn\": \"Chinese (China)\",\n  \"zh-tw\": \"Chinese (Taiwan)\",\n});\n\nexport default CognosApi;\n","import { useGlobalState } from \"../../hooks/globalState\";\nimport React, { useEffect, useState } from \"react\";\nimport {\n  Modal,\n  TextInput,\n  Tabs,\n  Tab,\n  Select,\n  SelectItem,\n  Loading,\n} from \"carbon-components-react\";\n\nimport { getCognosSession } from \"../../helpers/helpers\";\nimport { getResourceKeys } from \"../../helpers/apiCalls\";\n\nimport textLanguage from \"../../helpers/languagesConfig\";\nimport \"./style.css\";\n\nexport default function CognosConfigModal() {\n  const {\n    history,\n    resources,\n    language,\n    cognosConfigOpen,\n    setCognosConfigOpen,\n    cognosUsername,\n    setCognosUsername,\n    cognosPassword,\n    setCognosPassword,\n    setCloudantApi,\n    setCloudantUrl,\n    cloudantDbName,\n    setCloudantDbName,\n    setCognosSession,\n    setCognosDashboard,\n    setWarningOpen,\n    setUnsavedChanges,\n    xsd,\n    setXsd,\n    setJdbcUrl,\n    driverClassName,\n    setDriverClassName,\n    setDb2UserName,\n    setDb2Passwor,\n    logsTable,\n    setLogsTable,\n    conversationTable,\n    setConversationTable,\n    callsTable,\n    setCallsTable,\n    contextTable,\n    setContextTable,\n    conversationPathTable,\n    setConversationPathTable,\n    overviewTable,\n    setOverviewTable,\n    classDistributionTable,\n    setClassDistributionTable,\n    precisionAtKTable,\n    setPrecisionAtKTable,\n    classAccuracyTable,\n    setClassAccuracyTable,\n    pairWiseClassErrorsTable,\n    setPairWiseClassErrorsTable,\n    accuracyVsCoverageTable,\n    setAccuracyVsCoverageTable,\n    accountLoading,\n  } = useGlobalState();\n\n  const [cognosInstance, setCognosInstance] = useState(null);\n  const [cloudantInstance, setCloudantInstance] = useState(null);\n  const [db2Instance, setDb2Instance] = useState(null);\n\n  useEffect(() => {\n    if (cognosInstance) handleCognosCredentials();\n  }, [cognosInstance]);\n\n  useEffect(() => {\n    if (cloudantInstance) handleCloudantCredentials();\n  }, [cloudantInstance]);\n\n  useEffect(() => {\n    if (db2Instance) handleDb2Credentials();\n  }, [db2Instance]);\n\n  async function handleCognosCredentials() {\n    const resourceKeys = await getResourceKeys(cognosInstance.guid).catch(() =>\n      history.push(\"/login\")\n    );\n    const credentials = resourceKeys.resources[0].credentials;\n    setCognosUsername(credentials.client_id);\n    setCognosPassword(credentials.client_secret);\n  }\n\n  async function handleCloudantCredentials() {\n    const resourceKeys = await getResourceKeys(cloudantInstance.guid).catch(\n      () => history.push(\"/login\")\n    );\n    const credentials = resourceKeys.resources[0].credentials;\n    setCloudantApi(credentials.apikey);\n    setCloudantUrl(credentials.url);\n  }\n\n  async function handleDb2Credentials() {\n    const resourceKeys = await getResourceKeys(db2Instance.guid).catch(() =>\n      history.push(\"/login\")\n    );\n    const credentials = resourceKeys.resources[0].credentials;\n\n    setDb2UserName(credentials.connection.db2.authentication.username);\n    setDb2Passwor(credentials.connection.db2.authentication.password);\n    setJdbcUrl(\n      credentials.connection.db2.jdbc_url[0].replace(\n        \"user=<userid>;password=<your_password>;\",\n        \"\"\n      )\n    );\n  }\n\n  async function handleSubmit() {\n    setCognosSession(null);\n    setCognosDashboard(null);\n    setUnsavedChanges(false);\n    const response = await getCognosSession(cognosUsername, cognosPassword);\n    if (response.data.Error) {\n      setWarningOpen(true);\n      setCognosSession(null);\n    } else {\n      setCognosSession(response.data);\n    }\n  }\n\n  return !accountLoading ? (\n    <Modal\n      id=\"cognosModal\"\n      hasForm\n      open={cognosConfigOpen}\n      modalHeading={textLanguage[language].cognosModal.heading}\n      modalLabel={textLanguage[language].cognosModal.label}\n      primaryButtonText={textLanguage[language].cognosModal.primaryText}\n      secondaryButtonText={textLanguage[language].cognosModal.secondaryText}\n      onRequestClose={() => {\n        setCognosConfigOpen(false);\n      }}\n      onRequestSubmit={handleSubmit}\n      preventCloseOnClickOutside\n    >\n      <Tabs type=\"container\">\n        <Tab id={\"cognos\"} label={textLanguage[language].cognosModal.tab1}>\n          <Select\n            id=\"select-1\"\n            invalidText=\"A valid value is required\"\n            labelText={textLanguage[language].cognosModal.inputLabel1}\n            onChange={(e) => {\n              if (e.target.value === \"placeholder\")\n                alert(textLanguage[language].cognosModal.alert);\n              else setCognosInstance(JSON.parse(e.target.value));\n            }}\n          >\n            <SelectItem\n              text={textLanguage[language].cognosModal.selectAnOption}\n              value=\"placeholder\"\n            />\n            {resources.cognos.body.resources.map((resource) => (\n              <SelectItem\n                text={resource.name}\n                value={JSON.stringify(resource)}\n              />\n            ))}\n          </Select>\n        </Tab>\n        <Tab id={\"cloudant\"} label={textLanguage[language].cognosModal.tab2}>\n          <Select\n            id=\"select-1\"\n            invalidText=\"A valid value is required\"\n            labelText={textLanguage[language].cognosModal.inputLabel2}\n            onChange={(e) => {\n              if (e.target.value === \"placeholder\")\n                alert(textLanguage[language].cognosModal.alert);\n              else setCloudantInstance(JSON.parse(e.target.value));\n            }}\n          >\n            <SelectItem\n              text={textLanguage[language].cognosModal.selectAnOption}\n              value=\"placeholder\"\n            />\n            {resources.cloudant.body.resources.map((resource) => (\n              <SelectItem\n                text={resource.name}\n                value={JSON.stringify(resource)}\n              />\n            ))}\n          </Select>\n\n          <TextInput\n            data-modal-primary-focus\n            id=\"text-input-7\"\n            labelText={textLanguage[language].cognosModal.inputLabel3}\n            placeholder={cloudantDbName}\n            style={{ marginBottom: \"1rem\" }}\n            onChange={(e) => {\n              setCloudantDbName(e.target.value);\n            }}\n          />\n        </Tab>\n        <Tab id={\"db2\"} label={textLanguage[language].cognosModal.tab3}>\n          <Select\n            id=\"select-1\"\n            invalidText=\"A valid value is required\"\n            labelText={textLanguage[language].cognosModal.inputLabel4}\n            onChange={(e) => {\n              if (e.target.value === \"placeholder\")\n                alert(textLanguage[language].cognosModal.alert);\n              else setDb2Instance(JSON.parse(e.target.value));\n            }}\n          >\n            <SelectItem\n              text={textLanguage[language].cognosModal.selectAnOption}\n              value=\"placeholder\"\n            />\n            {resources.db2.body.resources.map((resource) => (\n              <SelectItem\n                text={resource.name}\n                value={JSON.stringify(resource)}\n              />\n            ))}\n          </Select>\n\n          <TextInput\n            data-modal-primary-focus\n            id=\"text-input-8\"\n            labelText={textLanguage[language].cognosModal.inputLabel5}\n            placeholder={xsd}\n            style={{ marginBottom: \"1rem\" }}\n            onChange={(e) => {\n              setXsd(e.target.value);\n            }}\n          />\n\n          <TextInput\n            data-modal-primary-focus\n            id=\"text-input-10\"\n            labelText={textLanguage[language].cognosModal.inputLabel6}\n            placeholder={driverClassName}\n            style={{ marginBottom: \"1rem\" }}\n            onChange={(e) => {\n              setDriverClassName(e.target.value);\n            }}\n          />\n        </Tab>\n        <Tab id=\"db2tables\" label={textLanguage[language].cognosModal.tab4}>\n          <TextInput\n            data-modal-primary-focus\n            id=\"text-input-14\"\n            labelText={textLanguage[language].cognosModal.inputLabel7}\n            placeholder={logsTable}\n            style={{ marginBottom: \"1rem\" }}\n            onChange={(e) => {\n              setLogsTable(e.target.value.toUpperCase());\n            }}\n          />\n          <TextInput\n            data-modal-primary-focus\n            id=\"text-input-15\"\n            labelText={textLanguage[language].cognosModal.inputLabel8}\n            placeholder={conversationTable}\n            style={{ marginBottom: \"1rem\" }}\n            onChange={(e) => {\n              setConversationTable(e.target.value.toUpperCase());\n            }}\n          />\n          <TextInput\n            data-modal-primary-focus\n            id=\"text-input-16\"\n            labelText={textLanguage[language].cognosModal.inputLabel9}\n            placeholder={callsTable}\n            style={{ marginBottom: \"1rem\" }}\n            onChange={(e) => {\n              setCallsTable(e.target.value.toUpperCase());\n            }}\n          />\n          <TextInput\n            data-modal-primary-focus\n            id=\"text-input-17\"\n            labelText={textLanguage[language].cognosModal.inputLabel10}\n            placeholder={contextTable}\n            style={{ marginBottom: \"1rem\" }}\n            onChange={(e) => {\n              setContextTable(e.target.value.toUpperCase());\n            }}\n          />\n          <TextInput\n            data-modal-primary-focus\n            id=\"text-input-17\"\n            labelText={textLanguage[language].cognosModal.inputLabel11}\n            placeholder={conversationPathTable}\n            style={{ marginBottom: \"1rem\" }}\n            onChange={(e) => {\n              setConversationPathTable(e.target.value.toUpperCase());\n            }}\n          />\n          <TextInput\n            data-modal-primary-focus\n            id=\"text-input-17\"\n            labelText={textLanguage[language].cognosModal.inputLabel12}\n            placeholder={overviewTable}\n            style={{ marginBottom: \"1rem\" }}\n            onChange={(e) => {\n              setOverviewTable(e.target.value.toUpperCase());\n            }}\n          />\n          <TextInput\n            data-modal-primary-focus\n            id=\"text-input-17\"\n            labelText={textLanguage[language].cognosModal.inputLabel13}\n            placeholder={classDistributionTable}\n            style={{ marginBottom: \"1rem\" }}\n            onChange={(e) => {\n              setClassDistributionTable(e.target.value.toUpperCase());\n            }}\n          />\n          <TextInput\n            data-modal-primary-focus\n            id=\"text-input-17\"\n            labelText={textLanguage[language].cognosModal.inputLabel14}\n            placeholder={precisionAtKTable}\n            style={{ marginBottom: \"1rem\" }}\n            onChange={(e) => {\n              setPrecisionAtKTable(e.target.value.toUpperCase());\n            }}\n          />\n          <TextInput\n            data-modal-primary-focus\n            id=\"text-input-17\"\n            labelText={textLanguage[language].cognosModal.inputLabel15}\n            placeholder={classAccuracyTable}\n            style={{ marginBottom: \"1rem\" }}\n            onChange={(e) => {\n              setClassAccuracyTable(e.target.value.toUpperCase());\n            }}\n          />\n          <TextInput\n            data-modal-primary-focus\n            id=\"text-input-17\"\n            labelText={textLanguage[language].cognosModal.inputLabel16}\n            placeholder={pairWiseClassErrorsTable}\n            style={{ marginBottom: \"1rem\" }}\n            onChange={(e) => {\n              setPairWiseClassErrorsTable(e.target.value.toUpperCase());\n            }}\n          />\n          <TextInput\n            data-modal-primary-focus\n            id=\"text-input-17\"\n            labelText={textLanguage[language].cognosModal.inputLabel17}\n            placeholder={accuracyVsCoverageTable}\n            style={{ marginBottom: \"1rem\" }}\n            onChange={(e) => {\n              setAccuracyVsCoverageTable(e.target.value.toUpperCase());\n            }}\n          />\n        </Tab>\n      </Tabs>\n    </Modal>\n  ) : (\n    <Loading />\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport { useGlobalState } from \"../../hooks/globalState\";\nimport Header from \"../../components/Header\";\n\nimport CognosApi from \"../../helpers/cognos\";\nimport {\n  getCognosSession,\n  getFromCloudant,\n  initializeSources,\n} from \"../../helpers/helpers\";\n\nimport \"./style.css\";\n\nimport CognosConfigModal from \"../../components/CognosConfigModal\";\n\nexport default function CognosPage() {\n  const {\n    account,\n    history,\n    language,\n    setLanguage,\n    setCognosConfigOpen,\n    setCognosHelpOpen,\n    setCognosClient,\n    cognosSession,\n    setCognosSession,\n    cognosUsername,\n    cognosPassword,\n    cognosDashboard,\n    setCognosDashboard,\n    setSuccessOpen,\n    setUnsavedChanges,\n    setStandardDashboardModal,\n    cloudantApi,\n    cloudantUrl,\n    cloudantDbName,\n    defaultDashboardName,\n    xsd,\n    jdbcUrl,\n    driverClassName,\n    schema,\n    db2Username,\n    db2Password,\n    logsTable,\n    conversationTable,\n    callsTable,\n    contextTable,\n    conversationPathTable,\n    overviewTable,\n    classDistributionTable,\n    precisionAtKTable,\n    classAccuracyTable,\n    pairWiseClassErrorsTable,\n    accuracyVsCoverageTable,\n  } = useGlobalState();\n\n  const [renderSave, setRenderSave] = useState(false);\n\n  useEffect(() => {\n    if (account.entity.name === \"\") history.push(\"/login\");\n  }, []);\n\n  async function loadDashboard(cognosApi, dashboard, setUnsavedChanges) {\n    return new Promise((resolve, reject) => {\n      cognosApi.initialize().then(() => {\n        cognosApi.dashboard\n          .openDashboard({\n            dashboardSpec: dashboard,\n          })\n          .then(async (dashboardAPI) => {\n            dashboardAPI.setMode(dashboardAPI.MODES.EDIT);\n            setCognosDashboard(await dashboardAPI.getSpec());\n\n            dashboardAPI.on(dashboardAPI.EVENTS.DIRTY, async () => {\n              const dashSpec = await dashboardAPI.getSpec();\n              setUnsavedChanges(true);\n              setCognosDashboard(dashSpec);\n            });\n\n            setRenderSave(true);\n            resolve(\"Ok\");\n          });\n      });\n    });\n  }\n\n  async function initializeDashboard(cognosApi) {\n    cognosApi.initialize().then(async () => {\n      cognosApi.dashboard\n        .openDashboard({\n          dashboardSpec: await initializeSources(\n            xsd,\n            jdbcUrl,\n            driverClassName,\n            schema,\n            db2Username,\n            db2Password,\n            logsTable,\n            conversationTable,\n            callsTable,\n            contextTable,\n            conversationPathTable,\n            overviewTable,\n            classDistributionTable,\n            precisionAtKTable,\n            classAccuracyTable,\n            pairWiseClassErrorsTable,\n            accuracyVsCoverageTable\n          ),\n        })\n        .then(async (dashboardAPI) => {\n          dashboardAPI.setMode(dashboardAPI.MODES.EDIT);\n          setCognosDashboard(await dashboardAPI.getSpec());\n\n          dashboardAPI.on(dashboardAPI.EVENTS.DIRTY, async () => {\n            const dashSpec = await dashboardAPI.getSpec();\n            setUnsavedChanges(true);\n            setCognosDashboard(dashSpec);\n          });\n\n          setRenderSave(true);\n        });\n    });\n  }\n\n  useEffect(async () => {\n    const storedLanguage = localStorage.getItem(\"language\");\n    if (storedLanguage) setLanguage(storedLanguage);\n\n    setSuccessOpen(false);\n    setStandardDashboardModal(false);\n\n    if (\n      cognosUsername &&\n      cognosUsername !== \"null\" &&\n      cognosPassword &&\n      cognosPassword !== \"null\"\n    ) {\n      const session = await getCognosSession(cognosUsername, cognosPassword);\n      if (session.data.Error) {\n        setCognosSession(null);\n      } else {\n        setCognosSession(session.data);\n      }\n    } else {\n      setCognosConfigOpen(true);\n    }\n  }, []);\n\n  useEffect(async () => {\n    if (cognosSession && typeof cognosSession === \"string\") {\n      const cognosApi = new CognosApi({\n        cognosRootURL:\n          \"https://us-south.dynamic-dashboard-embedded.cloud.ibm.com/daas/\",\n        node: document.getElementById(\"cognosDiv\"),\n        sessionCode: cognosSession,\n        language: language,\n      });\n      setCognosClient(cognosApi);\n\n      if (cognosDashboard) {\n        await loadDashboard(cognosApi, cognosDashboard, setUnsavedChanges);\n      } else {\n        const storagedDashboard = await getFromCloudant(\n          defaultDashboardName,\n          cloudantApi,\n          cloudantUrl,\n          cloudantDbName,\n          setStandardDashboardModal\n        );\n        setCognosConfigOpen(false);\n        if (!storagedDashboard.Error) {\n          await loadDashboard(cognosApi, storagedDashboard, setUnsavedChanges);\n        } else {\n          await initializeDashboard(cognosApi);\n        }\n      }\n    } else if (!cognosSession) {\n      setRenderSave(false);\n      setCognosClient(null);\n    }\n  }, [cognosSession]);\n\n  return (\n    <div id=\"content\">\n      <Header\n        modalOpen={setCognosConfigOpen}\n        helpOpen={setCognosHelpOpen}\n        renderButton={renderSave}\n      />\n      <CognosConfigModal />\n      <div id=\"cognosDiv\"></div>\n    </div>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport \"carbon-components/css/carbon-components.min.css\";\nimport Header from \"../../components/Header\";\nimport { useGlobalState } from \"../../hooks/globalState\";\nimport { TextInput, Button, Loading } from \"carbon-components-react\";\nimport {\n  getAccounts,\n  getResources,\n  switchAccount,\n} from \"../../helpers/apiCalls\";\nimport api from \"../../services/api\";\n\nimport { registerLogin } from \"../../helpers/helpers\";\n\nimport \"./style.css\";\n\nexport default function Login() {\n  const {\n    setHelpOpen,\n    setConfigOpen,\n    history,\n    setAccount,\n    setAccounts,\n    setResources,\n    logsTable,\n    setLogsTable,\n    conversationTable,\n    setConversationTable,\n    callsTable,\n    setCallsTable,\n    contextTable,\n    setContextTable,\n    conversationPathTable,\n    setConversationPathTable,\n    overviewTable,\n    setOverviewTable,\n    classDistributionTable,\n    setClassDistributionTable,\n    precisionAtKTable,\n    setPrecisionAtKTable,\n    classAccuracyTable,\n    setClassAccuracyTable,\n    pairWiseClassErrorsTable,\n    setPairWiseClassErrorsTable,\n    accuracyVsCoverageTable,\n    setAccuracyVsCoverageTable,\n    xsd,\n    setXsd,\n    driverClassName,\n    setDriverClassName,\n    cloudantDbName,\n    setCloudantDbName,\n  } = useGlobalState();\n  const [token, setToken] = useState(\"\");\n  const [invalid, setInvalid] = useState(false);\n  const [loading, setLoading] = useState(false);\n\n  async function handleLogin() {\n    setLoading(true);\n    try {\n      await api.post(\"/ibmid/login\", { passcode: token });\n      let res = await getAccounts();\n      setAccounts(res);\n      if (\n        localStorage.getItem(\"savedAccount\") &&\n        res.resources.some(\n          (account) =>\n            JSON.stringify(account) === localStorage.getItem(\"savedAccount\")\n        )\n      ) {\n        console.log(\"Found account. Picking last one used\");\n        switchAccount(\n          JSON.parse(localStorage.getItem(\"savedAccount\")).metadata.guid\n        ).then(() => {\n          setAccount(JSON.parse(localStorage.getItem(\"savedAccount\")));\n        });\n      } else {\n        console.log(\"No saved account. Picking default first\");\n        setAccount(res.resources[0]);\n      }\n      setResources(await getResources());\n      history.push(\"/\");\n\n      registerLogin(\n        `${\n          res.resources[0].entity.primary_owner.ibmid\n        } - ${new Date().toLocaleDateString(\"pt-BR\", {\n          timeZone: \"America/Sao_Paulo\",\n          hour: \"numeric\",\n          minute: \"numeric\",\n          second: \"numeric\",\n        })}`,\n        res.resources[0]\n      );\n    } catch (error) {\n      setInvalid(true);\n    }\n    setLoading(false);\n  }\n\n  useEffect(async () => {\n    if (localStorage.getItem(\"xsd\")) {\n      setXsd(localStorage.getItem(\"xsd\"));\n    } else {\n      localStorage.setItem(\"xsd\", xsd);\n    }\n    if (localStorage.getItem(\"driverClassName\")) {\n      setDriverClassName(localStorage.getItem(\"driverClassName\"));\n    } else {\n      localStorage.setItem(\"driverClassName\", driverClassName);\n    }\n    if (localStorage.getItem(\"cloudantDbName\")) {\n      setCloudantDbName(localStorage.getItem(\"cloudantDbName\"));\n    } else {\n      localStorage.setItem(\"cloudantDbName\", cloudantDbName);\n    }\n    if (localStorage.getItem(\"logsTable\")) {\n      setLogsTable(localStorage.getItem(\"logsTable\"));\n    } else {\n      localStorage.setItem(\"logsTable\", logsTable);\n    }\n    if (localStorage.getItem(\"conversationTable\")) {\n      setConversationTable(localStorage.getItem(\"conversationTable\"));\n    } else {\n      localStorage.setItem(\"conversationTable\", conversationTable);\n    }\n    if (localStorage.getItem(\"callsTable\")) {\n      setCallsTable(localStorage.getItem(\"callsTable\"));\n    } else {\n      localStorage.setItem(\"callsTable\", callsTable);\n    }\n    if (localStorage.getItem(\"contextTable\")) {\n      setContextTable(localStorage.getItem(\"contextTable\"));\n    } else {\n      localStorage.setItem(\"contextTable\", contextTable);\n    }\n    if (localStorage.getItem(\"conversationPathTable\")) {\n      setConversationPathTable(localStorage.getItem(\"conversationPathTable\"));\n    } else {\n      localStorage.setItem(\"conversationPathTable\", conversationPathTable);\n    }\n    if (localStorage.getItem(\"overviewTable\")) {\n      setOverviewTable(localStorage.getItem(\"overviewTable\"));\n    } else {\n      localStorage.setItem(\"overviewTable\", overviewTable);\n    }\n    if (localStorage.getItem(\"classDistributionTable\")) {\n      setClassDistributionTable(localStorage.getItem(\"classDistributionTable\"));\n    } else {\n      localStorage.setItem(\"classDistributionTable\", classDistributionTable);\n    }\n    if (localStorage.getItem(\"precisionAtKTable\")) {\n      setPrecisionAtKTable(localStorage.getItem(\"precisionAtKTable\"));\n    } else {\n      localStorage.setItem(\"precisionAtKTable\", precisionAtKTable);\n    }\n    if (localStorage.getItem(\"classAccuracyTable\")) {\n      setClassAccuracyTable(localStorage.getItem(\"classAccuracyTable\"));\n    } else {\n      localStorage.setItem(\"classAccuracyTable\", classAccuracyTable);\n    }\n    if (localStorage.getItem(\"pairWiseClassErrorsTable\")) {\n      setPairWiseClassErrorsTable(\n        localStorage.getItem(\"pairWiseClassErrorsTable\")\n      );\n    } else {\n      localStorage.setItem(\n        \"pairWiseClassErrorsTable\",\n        pairWiseClassErrorsTable\n      );\n    }\n    if (localStorage.getItem(\"accuracyVsCoverageTable\")) {\n      setAccuracyVsCoverageTable(\n        localStorage.getItem(\"accuracyVsCoverageTable\")\n      );\n    } else {\n      localStorage.setItem(\"accuracyVsCoverageTable\", accuracyVsCoverageTable);\n    }\n  }, []);\n\n  return (\n    <div id=\"login_page\">\n      <Header modalOpen={setConfigOpen} helpOpen={setHelpOpen} />\n      <div id=\"login_content\">\n        <div id=\"login_image\">\n          <div id=\"image\" />\n        </div>\n\n        <div id=\"login\">\n          <h2>Login</h2>\n          <br></br>\n          <TextInput\n            size=\"md\"\n            type=\"password\"\n            labelText=\"Token\"\n            placeholder=\"IBM Cloud one time Token\"\n            required\n            invalid={invalid}\n            invalidText=\"Please, try againg.\"\n            value={token}\n            onChange={(event) => {\n              setToken(event.target.value);\n              setInvalid(false);\n            }}\n          />\n          <div id=\"buttons\">\n            <Button\n              className={\"button\"}\n              href={`${window.location.protocol}//${window.location.host}/ibmid/passcode`}\n              target=\"_blank\"\n              kind=\"secondary\"\n            >\n              Get Token\n            </Button>\n            <Button onClick={handleLogin} className={\"button\"}>\n              Login\n            </Button>\n          </div>\n        </div>\n        {loading && <Loading />}\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { Route, Switch, BrowserRouter, Redirect } from \"react-router-dom\";\nimport Dashboard from \"./pages/Dashboard/index\";\nimport SearchPage from \"./pages/Search/index\";\nimport CognosPage from \"./pages/Cognos/index\";\nimport Login from \"./pages/Login/index\";\nimport GlobalStateProvider from \"./hooks/globalState\";\n\nexport default function Routes() {\n  return (\n    <BrowserRouter>\n      <GlobalStateProvider>\n        <Switch>\n          <Route exact path=\"/\" component={Dashboard} />\n          <Route exact path=\"/dashboard\" component={Dashboard} />\n          <Route exact path=\"/login\" component={Login} />\n          <Route exact path=\"/search\" component={SearchPage} />\n          <Route exact path=\"/cognos\" component={CognosPage} />\n        </Switch>\n      </GlobalStateProvider>\n    </BrowserRouter>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './global.css';\nimport Routes from './routes';\nimport GlobalStateProvider from './hooks/globalState';\n\nReactDOM.render(\n  <React.StrictMode>\n    <GlobalStateProvider>\n      <Routes />\n    </GlobalStateProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}